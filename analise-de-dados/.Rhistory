dados_iris |>
summarise(
media = mean(comprimento_sepala),
mediana = median(comprimento_sepala),
dp = sd(comprimento_sepala),
cv = dp / media
)
# Chunk 76
tabela <- dados_iris |>
group_by(especies) |>
summarise(
media = mean(comprimento_sepala),
mediana = median(comprimento_sepala),
dp = sd(comprimento_sepala),
cv = dp / media
)
tabela
# Chunk 77
dados_MB <- read_xlsx("dados/brutos/companhia_MB.xlsx")
p <- c(1/8, 1/4, 1/2, 3/4, 7/8)
salario <- dados_MB$salario
# Chunk 78
(quantil_tipo_1 <- quantile(salario, probs = p, type = 1))
# Chunk 79
(quantil_tipo_2 <- quantile(salario, probs = p, type = 2))
# Chunk 80
(quantil_tipo_3 <- quantile(salario, probs = p, type = 3))
# Chunk 81
(quantil_tipo_4 <- quantile(salario, probs = p, type = 4))
# Chunk 82
(quantil_tipo_5 <- quantile(salario, probs = p, type = 5))
# Chunk 83
(quantil_tipo_6 <- quantile(salario, probs = p, type = 6))
# Chunk 84
(quantil_tipo_7 <- quantile(salario, probs = p, type = 7))
# Chunk 85
(quantil_tipo_8 <- quantile(salario, probs = p, type = 8))
# Chunk 86
(quantil_tipo_9 <- quantile(salario, probs = p, type = 9))
# Chunk 87
#| echo: false
tipos <- seq_len(9) |>
sapply(\(k) quantile(dados_MB$salario, probs = p, type = k)) |>
t()
colnames(tipos) <- format(p * 100, big.mark = ".", decimal.mark = ",") |> paste("%")
rownames(tipos) <- NULL
df_tipos <- as_tibble(tipos) |>
mutate(tipos = paste("tipos", seq_len(9))) |>
dplyr::select(tipos, everything())
knitr::kable(df_tipos, format.args = list(decimal.mark = ",", big.mark = "."),
caption = "Comparação de alguns quantis calculados usando diferentes métodos de aproximação para a variável \\texttt{salario}.")
# Chunk 88
set.seed(12345)
amostra <- rnorm(1000, mean = 500, sd = 100)
# Chunk 89
#| echo: false
tipos <- seq_len(9) |>
sapply(\(k) quantile(amostra, probs = p, type = k)) |>
t()
tipos <- rbind(
qnorm(p, mean = 500, sd = 100),
tipos
)
colnames(tipos) <- format(p * 100, big.mark = ".", decimal.mark = ",") |> paste("%")
rownames(tipos) <- NULL
df_tipos <- as_tibble(tipos) |>
mutate(tipos = c("Quantil populacional", paste("tipos", seq_len(9)))) |>
dplyr::select(tipos, everything())
knitr::kable(df_tipos, format.args = list(decimal.mark = ",", big.mark = "."),
caption = "Comparação de alguns quantis calculados usando diferentes métodos de aproximação para a distribuição normal com média 500 e desvio padrão 100.")
# Chunk 90
dados_iris |>
group_by(especies) |>
summarise(
q1 = quantile(comprimento_sepala, 0.25),
q2 = quantile(comprimento_sepala, 0.5),
q3 = quantile(comprimento_sepala, 0.75),
frequencia = n()
)
# Chunk 91
library(lettervalue)
letter_value(dados_iris$comprimento_sepala, level = 3)
# Chunk 92
valores_letras <- letter_value(rivers)
summary(valores_letras)
# Chunk 93
#| echo: false
#| out.width: 25%
knitr::include_graphics("boxplot.png")
#| echo: false
#| out-width: 100%
df_escola_a <- read_xlsx("dados/brutos/escola_a.xlsx")
df_escola_b <- read_xlsx("dados/brutos/escola_b.xlsx")
estat_ordem_a <- sort(df_escola_a$escola_a)
estat_ordem_b <- sort(df_escola_b$escola_b)
#| eval: false
df_escola_a <- read_xlsx("dados/brutos/escola_a.xlsx")
df_escola_c <- read_xlsx("dados/brutos/escola_c.xlsx")
estat_ordem_a <- sort(df_escola_a$escola_a)
estat_ordem_c <- sort(df_escola_c$escola_c)
tibble(escola_a = estat_ordem_a, escola_c = estat_ordem_c) |>
ggplot(aes(escola_a, escola_c)) +
geom_point(size = 3) +
geom_abline(intercept = 0, slope = 1, size = 2, color = "blue") +
theme_minimal() +
labs(x = "Escola A", y = "Escola C")
shapiro.test(dados_iris$largura_sepala)
hist(dados_iris$largura_sepala)
p_load(qqplotr)
library(pacman)
p_load(qqplotr)
p_load(qqplotr)
ggplot(
dados_iris,
aes(sample = largura_sepala)
) +
stat_qq_point() +
stat_qq_line() +
stat_qq_band()
ggplot(
dados_iris,
aes(sample = largura_sepala)
) +
stat_qq_point() +
stat_qq_line() +
stat_qq_band(bandType = "ts")
ggplot(
dados_iris,
aes(sample = largura_sepala)
) +
stat_qq_point() +
stat_qq_line() +
stat_qq_band(bandType = "ts") +
theme_minimal()
ggplot(
dados_iris,
aes(sample = largura_sepala)
) +
stat_qq_point() +
stat_qq_line() +
stat_qq_band(bandType = "ts") +
theme_minimal() +
labs(
x = "Quantis teóricos da distribuição normal",
y = "Quantis amostrais"
)
ggplot(
dados_iris,
aes(sample = largura_sepala)
) +
stat_qq_point(color = "blue") +
stat_qq_line() +
stat_qq_band(bandType = "ts", color = "red") +
theme_minimal() +
labs(
x = "Quantis teóricos da distribuição normal",
y = "Quantis amostrais"
)
ggplot(
dados_iris,
aes(sample = largura_sepala)
) +
stat_qq_point(color = "blue") +
stat_qq_line() +
stat_qq_band(bandType = "ts", fill = "red") +
theme_minimal() +
labs(
x = "Quantis teóricos da distribuição normal",
y = "Quantis amostrais"
)
ggplot(
dados_iris,
aes(sample = largura_sepala)
) +
stat_qq_point(color = "blue") +
stat_qq_line() +
stat_qq_band(bandType = "ts", fill = "red", alpha = 0.5) +
theme_minimal() +
labs(
x = "Quantis teóricos da distribuição normal",
y = "Quantis amostrais"
)
ggplot(
dados_iris,
aes(sample = largura_sepala)
) +
stat_qq_point(color = "blue") +
stat_qq_line() +
stat_qq_band(bandType = "ts", fill = "red", alpha = 0.25) +
theme_minimal() +
labs(
x = "Quantis teóricos da distribuição normal",
y = "Quantis amostrais"
)
ggplot(
dados_iris,
aes(sample = largura_sepala)
) +
stat_qq_point(color = "blue") +
stat_qq_line(size = 1.5, color = "purple") +
stat_qq_band(bandType = "ts", fill = "red", alpha = 0.25) +
theme_minimal() +
labs(
x = "Quantis teóricos da distribuição normal",
y = "Quantis amostrais"
)
library(lettervalue)
letter_value
install.packages("lettervalue")
install.packages("lettervalue")
library(lettervalue)
letter_value()
letter_value
install.packages("remotes")
remotes::install_github("gilberto-sassi/lettervalue")
library(lettervalue)
letter_value
install.packages("lettervalue")
install.packages("lettervalue")
letter_value
remotes::install_github("gilberto-sassi/lettervalue")
library(pacman)
p_load(glue)
p_load(readxl)
p_load(writexl)
p_load(janitor)
p_load(dplyr)
p_load(gt)
p_load(ggthemes)
p_load(statBasics)
p_load(MASS)
p_load(readODS)
p_load(dados)
p_load(patchwork)
p_load(aplpack)
p_load(rlang)
p_load(KbMvtSkew)
p_load(tidyverse)
#| echo: false
df <- tibble(x = rexp(1000))
library(pacman)
p_load(glue)
p_load(readxl)
p_load(writexl)
p_load(janitor)
p_load(dplyr)
p_load(gt)
p_load(ggthemes)
p_load(statBasics)
p_load(MASS)
p_load(readODS)
p_load(dados)
p_load(patchwork)
p_load(aplpack)
p_load(rlang)
p_load(mvtnorm)
p_load(qqplotr)
p_load(KbMvtSkew)
p_load(tidyverse)
#| echo: false
df <- tibble(x = rexp(1000))
p_load(ggthemes)
lv <- ggplot(df) + geom_lv(x = "", y = x)
p_load(lvplot)
lv <- ggplot(df) + geom_lv(x = "", y = x)
#| echo: false
df <- tibble(x = rexp(1000))
lv <- ggplot(df) + geom_lv(x = "", y = x)
glimpse(df)
lv <- ggplot(df) + geom_lv(x = "", y = x)
lv <- ggplot(df) + geom_lv(aes(x = "", y = x))
lv / dc
lv <- ggplot(df) + geom_lv(aes(x = "", y = x))
dc <- ggplot(df) + geom_boxplot(aes(x = "", y = x))
lv / dc
#| echo: false
df <- tibble(x = rexp(1000))
lv <- ggplot(df) + geom_lv(aes(x = "", y = x)) + coord_flip()
dc <- ggplot(df) + geom_boxplot(aes(x = "", y = x)) + coord_flip()
lv / dc
#| echo: false
df <- tibble(x = rexp(1000))
lv <- ggplot(df) + geom_lv(aes(x = "", y = x)) + theme_minimal() + coord_flip()
dc <- ggplot(df) + geom_boxplot(aes(x = "", y = x)) + theme_minimal() + coord_flip()
lv / dc
#| echo: false
df <- tibble(x = rexp(1000))
lv <- ggplot(df) +
geom_lv(aes(x = "", y = x)) +
labs(x = "")
theme_minimal() +
coord_flip()
#| echo: false
df <- tibble(x = rexp(1000))
lv <- ggplot(df) +
geom_lv(aes(x = "", y = x)) +
labs(x = "")
theme_minimal() +
coord_flip()
#| echo: false
df <- tibble(x = rexp(1000))
lv <- ggplot(df) +
geom_lv(aes(x = "", y = x)) +
labs(x = "") +
theme_minimal() +
coord_flip()
dc <- ggplot(df) +
geom_boxplot(aes(x = "", y = x)) +
labs(x = "") +
theme_minimal() +
coord_flip()
lv / dc
#| echo: false
df <- tibble(x = rexp(1000))
lv <- ggplot(df) +
geom_lv(aes(x = "", y = x)) +
labs(x = "", y = "") +
theme_minimal() +
coord_flip()
dc <- ggplot(df) +
geom_boxplot(aes(x = "", y = x)) +
labs(x = "", y = "") +
theme_minimal() +
coord_flip()
lv / dc
#| echo: false
df <- tibble(x = rexp(1000))
lv <- ggplot(df) +
geom_lv(aes(x = "", y = x)) +
labs(x = "", y = "") +
scale_x_continuous(breaks = NULL)
theme_minimal() +
coord_flip()
#| echo: false
df <- tibble(x = rexp(1000))
lv <- ggplot(df) +
geom_lv(aes(x = "", y = x)) +
labs(x = "", y = "") +
scale_x_continuous(breaks = NULL) +
theme_minimal() +
coord_flip()
dc <- ggplot(df) +
geom_boxplot(aes(x = "", y = x)) +
labs(x = "", y = "") +
theme_minimal() +
coord_flip()
lv / dc
#| echo: false
df <- tibble(x = rexp(1000))
lv <- ggplot(df) +
geom_lv(aes(x = "", y = x)) +
labs(x = "", y = "") +
scale_y_continuous(breaks = NULL) +
theme_minimal() +
coord_flip()
dc <- ggplot(df) +
geom_boxplot(aes(x = "", y = x)) +
labs(x = "", y = "") +
theme_minimal() +
coord_flip()
lv / dc
#| echo: false
df <- tibble(x = rexp(1000))
lv <- ggplot(df) +
geom_lv(aes(x = "", y = x)) +
labs(x = "", y = "") +
scale_y_continuous(breaks = NULL) +
theme_minimal() +
coord_flip()
dc <- ggplot(df) +
geom_boxplot(aes(x = "", y = x)) +
labs(x = "", y = "") +
scale_y_continuous(breaks = NULL) +
theme_minimal() +
coord_flip()
lv / dc
#| echo: false
#| fig.cap: "`geom_lv` versus `geom_boxplot`."
df <- tibble(x = rexp(1000))
lv <- ggplot(df) +
geom_lv(aes(x = "", y = x)) +
labs(x = "geom_lv", y = "") +
scale_y_continuous(breaks = NULL) +
theme(axis.title.x = element_text(size = 10))
theme_minimal() +
coord_flip()
#| echo: false
#| fig.cap: "`geom_lv` versus `geom_boxplot`."
df <- tibble(x = rexp(1000))
lv <- ggplot(df) +
geom_lv(aes(x = "", y = x)) +
labs(x = "geom_lv", y = "") +
scale_y_continuous(breaks = NULL) +
theme(axis.title.x = element_text(size = 10)) +
theme_minimal() +
coord_flip()
dc <- ggplot(df) +
geom_boxplot(aes(x = "", y = x)) +
labs(x = "geom_boxplot", y = "") +
scale_y_continuous(breaks = NULL) +
theme_minimal() +
coord_flip()
lv / dc
#| echo: false
#| fig.cap: "`geom_lv` versus `geom_boxplot`."
df <- tibble(x = rexp(1000))
lv <- ggplot(df) +
geom_lv(aes(x = "", y = x)) +
labs(x = "geom_lv", y = "") +
scale_y_continuous(breaks = NULL) +
theme(axis.title.x = element_text(size = 20)) +
theme_minimal() +
coord_flip()
dc <- ggplot(df) +
geom_boxplot(aes(x = "", y = x)) +
labs(x = "geom_boxplot", y = "") +
scale_y_continuous(breaks = NULL) +
theme_minimal() +
coord_flip()
lv / dc
#| echo: false
#| fig.cap: "`geom_lv` versus `geom_boxplot`."
df <- tibble(x = rexp(1000))
lv <- ggplot(df) +
geom_lv(aes(x = "", y = x)) +
labs(x = "geom_lv", y = "") +
scale_y_continuous(breaks = NULL) +
theme(axis.title.x = element_text(size = 20)) +
theme_minimal() +
coord_flip()
dc <- ggplot(df) +
geom_boxplot(aes(x = "", y = x)) +
labs(x = "geom_boxplot", y = "") +
scale_y_continuous(breaks = NULL) +
theme(axis.title.x = element_text(size = 20)) +
theme_minimal() +
coord_flip()
lv / dc
#| echo: false
#| fig.cap: "`geom_lv` versus `geom_boxplot`."
df <- tibble(x = rexp(1000))
lv <- ggplot(df) +
geom_lv(aes(x = "", y = x)) +
labs(x = "geom_lv", y = "") +
scale_y_continuous(breaks = NULL) +
theme_minimal() +
theme(axis.title.x = element_text(size = 25)) +
coord_flip()
dc <- ggplot(df) +
geom_boxplot(aes(x = "", y = x)) +
labs(x = "geom_boxplot", y = "") +
scale_y_continuous(breaks = NULL) +
theme_minimal() +
theme(axis.title.x = element_text(size = 25)) +
coord_flip()
lv / dc
#| echo: false
#| fig.cap: "`geom_lv` versus `geom_boxplot`."
df <- tibble(x = rexp(1000))
lv <- ggplot(df) +
geom_lv(aes(x = "", y = x)) +
labs(x = "geom_lv", y = "") +
scale_y_continuous(breaks = NULL) +
theme_minimal() +
theme(axis.title.x = element_text(size = 25)) +
coord_flip()
dc <- ggplot(df) +
geom_boxplot(aes(x = "", y = x)) +
labs(x = "geom_boxplot", y = "") +
scale_y_continuous(breaks = NULL) +
theme_minimal() +
theme(axis.title = element_text(size = 25)) +
coord_flip()
lv / dc
#| echo: false
#| fig.cap: "`geom_lv` versus `geom_boxplot`."
df <- tibble(x = rexp(1000))
lv <- ggplot(df) +
geom_lv(aes(x = "", y = x)) +
labs(x = "geom_lv", y = "") +
scale_y_continuous(breaks = NULL) +
theme_minimal() +
theme(axis.title = element_text(size = 15)) +
coord_flip()
dc <- ggplot(df) +
geom_boxplot(aes(x = "", y = x)) +
labs(x = "geom_boxplot", y = "") +
scale_y_continuous(breaks = NULL) +
theme_minimal() +
theme(axis.title = element_text(size = 15)) +
coord_flip()
lv / dc
#| echo: false
#| fig.cap: "`geom_lv` versus `geom_boxplot`."
df <- tibble(x = rexp(1000))
lv <- ggplot(df) +
geom_lv(aes(x = "", y = x)) +
labs(x = "geom_lv", y = "") +
scale_y_continuous(breaks = NULL) +
theme_minimal() +
theme(axis.title = element_text(size = 20)) +
coord_flip()
dc <- ggplot(df) +
geom_boxplot(aes(x = "", y = x)) +
labs(x = "geom_boxplot", y = "") +
scale_y_continuous(breaks = NULL) +
theme_minimal() +
theme(axis.title = element_text(size = 20)) +
coord_flip()
lv / dc
?geom_lv
?geom_lv
