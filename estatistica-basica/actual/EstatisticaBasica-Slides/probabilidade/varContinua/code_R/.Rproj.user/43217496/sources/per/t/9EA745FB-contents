---
title: "Exemplos"
output: bookdown::html_notebook2
editor_options: 
  chunk_output_type: console
---

# pacotes usados

```{r, eval = F}
library(readxl)
library(xlsx)
library(tidyverse)
```


# Teorema do limite central

## Variável aleatória contínua

```{r, eval = F}
set.seed(1235813)
x <- c(7.29 , 7.19 , 7.15 , 5.54 , 5.93 , 5.53 , 6.44 , 6.27 , 8.16 , 5.72 , 
       4.84 , 4.63 , 6.11 , 7.10 , 3.37 , 7.36 , 6.70 , 5.70 , 6.31 , 7.64 , 
       5.89 , 8.82 , 7.77 , 7.93 , 5.24 , 6.08 , 5.77 , 6.57 , 6.00 , 6.14)

L <- 1e+3
tams <- c(5, 25, 50, 75)
media <- mean(x)
dp <- sd(x)
amostras <- tams %>% 
  map(function(i){
    seq_len(L) %>% map_dbl(~ sample(x, size = i, replace = T) %>% mean())
    })


for(l in seq_along(tams)){
  k <- (1 + log2(L)) %>% round()
  vx <- seq(from = -4 * dp / sqrt(tams[[l]]) + media,
            to = 4 * dp / sqrt(tams[[l]]) + media,
            by = 0.001)
  vy <- dnorm(vx, mean = media, sd = dp / sqrt(tams[[l]]))
  df <- tibble(x = vx, y = vy)
  
  ggplot(data = tibble(amostras = amostras[[l]]))+
    geom_histogram(aes(x = amostras, y = ..density..), bins = k, fill = "blue")+
    geom_line(data = df, aes(x = x, y = y), size = 2)+
    labs(x = "Médias de amostras", y = "Função densidade") +
    theme_minimal() +
    theme(axis.text = element_text(size = 20),
          axis.title = element_text(size = 25)) +
    geom_vline(xintercept = media, size = 2, linetype = "dashed", color = "red") +
    annotate("text", x = media + 2.5 * dp / sqrt(tams[[l]]),
             y = max(vy) , 
             label = "Média da população", 
             size = 10,
             color = "red")
  ggsave(sprintf("amostras_notas_%d.png", tams[l]))
  ggsave(sprintf("amostras_notas_%d.pdf", tams[l]))
}
```


## Variável aleatória discreta

Considere a variável discreta dada por

| $x$ | $x_1=0$ | $x_2=1$ | $x_3=2$ | $x_4=3$ | $x_5=4$ | $x_5=5$ |
|:-----:|:-----:|:-----:|:-----:|:-----:|:-----:|:-----:|:-----:|
| $f(x)$ |$0,1$|$0,4$|$0,05$|$0,05$|$0,3$|$0,1$|

```{r, eval = F}
set.seed(1235813)
amostras <- seq_len(10) %>% 
  sapply(function(i){
    sample(0:5, size = 5, replace = T,
           prob = c(0.1, 0.4, 0.05, 0.05, 0.3, 0.1))
  }) %>% t()
amostras <- cbind(amostras, rowMeans(amostras))
colnames(amostras) <- c(str_c("Valor amostrado ", 1:5), "Média")
rownames(amostras) <- str_c("Amostra ", 1:10)

xtable::xtable(amostras, align = rep("c", 7),
               caption = "Dez amostras de uma variável quantitativa.") %>% 
  print(booktabs = T, 
        format.args = list(decimal.mark = ","))
```


Histograma de médias das amostras

```{r, eval = F}
set.seed(1235813)

L <- 1e+3
tams <- c(5, 25, 50, 75)
probs <- c(0.1, 0.4, 0.05, 0.05, 0.3, 0.1)
x <- 0:5
media <- sum(x * probs)
dp <- sum((x - media)^2 * probs) %>% sqrt()
amostras <- tams %>% 
  map(function(i){
    seq_len(L) %>% map_dbl(~ base::sample(0:5,
                                          size = i,
                                          replace = T,
                                          prob = c(0.1, 0.4, 0.05, 0.05, 0.3, 0.1)) 
                           %>% mean())
    })


for(l in seq_along(tams)){
  k <- (1 + log2(L)) %>% round()
  vx <- seq(from = -4 * dp / sqrt(tams[[l]]) + media,
            to = 4 * dp / sqrt(tams[[l]]) + media,
            by = 0.001)
  vy <- dnorm(vx, mean = media, sd = dp / sqrt(tams[[l]]))
  df <- tibble(x = vx, y = vy)
  
  ggplot(data = tibble(amostras = amostras[[l]]))+
    geom_histogram(aes(x = amostras, y = ..density..), bins = k, fill = "blue")+
    geom_line(data = df, aes(x = x, y = y), size = 2)+
    labs(x = "Médias de amostras", y = "Função densidade") +
    theme_minimal() +
    theme(axis.text = element_text(size = 20),
          axis.title = element_text(size = 25)) +
    geom_vline(xintercept = media, size = 2, linetype = "dashed", color = "red") +
    annotate("text", x = media + 2.4 * dp / sqrt(tams[[l]]),
             y = max(vy) , 
             label = "Média da população", 
             size = 10,
             color = "red")
  ggsave(sprintf("amostras_discreta_%d.png", tams[l]))
  ggsave(sprintf("amostras_discreta_%d.pdf", tams[l]))
}

```

