z <- seq(from = xmin, to= xmax, by = 0.001)
f <- dt(z, df = gl)
dados <- tibble(z=z, f=f)
a <- 0.05
lower <- qt(a / 2, df = gl)
upper <- qt(1 - a / 2, df = gl)
ggplot(dados)+
geom_line(aes(x = z, y = f), color = "black", size = 1) +
labs(x = TeX("$T_0$"), y = "Função densidade",
title = TeX("Rejeitamos $H_0: \\mu_{1} - \\mu_{2} \\geq \\Delta_{0}$ se $t_0 < t_{\\alpha;\\nu}$"),
subtitle = bquote("RC = {" ~ t[0] ~ " | " ~ t[0] < t[alpha~';'~nu] ~ "}"),
caption = bquote(nu == frac((frac(s[1]^2, n[1]) + frac(s[2]^2, n[2]))^2,
frac((frac(s[1], n[1]))^2, n[1]-1) + frac((frac(s[2]^2, n[2]))^2, n[2]-1) ))) +
scale_x_continuous(breaks = c(lower, 0),
labels = c(TeX("$t_{\\alpha;\\nu}$"), "0")) +
scale_y_continuous(breaks = NULL) +
geom_ribbon(data = dplyr::filter(dados, z < lower),
aes(x = z, y = f, ymin = 0, ymax = f),
fill = "gray") +
theme_classic() +
theme(axis.title = element_text(size = 27.5),
axis.text = element_text(size = 27.5),
title = element_text(size = 27.5)) +
geom_vline(xintercept = 0, color = "black", size = 1) +
geom_segment(x = xmin, xend = lower, y = 0.15, yend =0.15, size = 1, color = "red") +
geom_segment(x = lower, xend = xmax, y = 0.15, yend =0.15, size = 1, color = "blue") +
geom_segment(x = lower, xend = lower, y = 0, yend = 0.15,
linetype = "dashed", color = "gray", size = 1) +
geom_point(data = tibble(x = c(lower), y = c(0.15)),
aes(x = x, y = y), size = 5,color  = "gray") +
annotate("text", x = -3, y = 0.2, label = "H[1]",
size = 10, color = "red", parse = T) +
annotate("text", x = 0.5, y = 0.2, label = "H[0]",
size = 10, color = "blue", parse = T) +
annotate("text", x = -3, y = 0.05, label = "alpha", parse = T,
color = "gray", size = 10) #+
gl <- 10
xmin <- -4
xmax <- 4
z <- seq(from = xmin, to= xmax, by = 0.001)
f <- dt(z, df = gl)
dados <- tibble(z=z, f=f)
a <- 0.05
lower <- qt(a / 2, df = gl)
upper <- qt(1 - a / 2, df = gl)
ggplot(dados)+
geom_line(aes(x = z, y = f), color = "black", size = 1) +
labs(x = TeX("$T_0$"), y = "Função densidade",
title = TeX("Rejeitamos $H_0: \\mu_{1} - \\mu_{2} \\geq \\Delta_{0}$ se $t_0 < t_{\\alpha;\\nu}$"),
subtitle = bquote("RC = {" ~ t[0] ~ " | " ~ t[0] < t[alpha~';'~nu] ~ "}"),
caption = bquote(nu == frac((frac(s[1]^2, n[1]) + frac(s[2]^2, n[2]))^2,
frac((frac(s[1], n[1]))^2, n[1]-1) + frac((frac(s[2]^2, n[2]))^2, n[2]-1) ))) +
scale_x_continuous(breaks = c(lower, 0),
labels = c(TeX("$t_{\\alpha;\\nu}$"), "0")) +
scale_y_continuous(breaks = NULL) +
geom_ribbon(data = dplyr::filter(dados, z < lower),
aes(x = z, y = f, ymin = 0, ymax = f),
fill = "gray") +
theme_classic() +
theme(axis.title = element_text(size = 27.5),
axis.text = element_text(size = 27.5),
title = element_text(size = 27.5)) +
geom_vline(xintercept = 0, color = "black", size = 1) +
geom_segment(x = xmin, xend = lower, y = 0.15, yend =0.15, size = 1, color = "red") +
geom_segment(x = lower, xend = xmax, y = 0.15, yend =0.15, size = 1, color = "blue") +
geom_segment(x = lower, xend = lower, y = 0, yend = 0.15,
linetype = "dashed", color = "gray", size = 1) +
geom_point(data = tibble(x = c(lower), y = c(0.15)),
aes(x = x, y = y), size = 5,color  = "gray") +
annotate("text", x = -3, y = 0.2, label = "H[1]",
size = 10, color = "red", parse = T) +
annotate("text", x = 0.5, y = 0.2, label = "H[0]",
size = 10, color = "blue", parse = T) +
annotate("text", x = -3, y = 0.05, label = "alpha", parse = T,
color = "gray", size = 10) #+
ggsave("../figures/2-pop-normal-s2-unknown-different-h1-lower.png")
ggsave("../figures/2-pop-normal-s2-unknown-different-h1-lower.pdf")
gl <- 10
xmin <- -4
xmax <- 4
z <- seq(from = xmin, to= xmax, by = 0.001)
f <- dt(z, df = gl)
dados <- tibble(z=z, f=f)
a <- 0.05
lower <- qt(a / 2, df = gl)
upper <- qt(1 - a / 2, df = gl)
ggplot(dados)+
geom_line(aes(x = z, y = f), color = "black", size = 1) +
labs(x = TeX("$T_0$"), y = "Função densidade",
title = TeX("Rejeitamos $H_0: \\mu_{1} - \\mu_{2} \\leq \\Delta_{0}$ se $t_0 > t_{1-\\alpha;\\nu}$"),
subtitle = bquote("RC = {" ~ t[0] ~ " | " ~ t[0] > t[1-alpha~';'~nu] ~ "}"),
caption = bquote(nu == frac((frac(s[1]^2, n[1]) + frac(s[2]^2, n[2]))^2,
frac((frac(s[1], n[1]))^2, n[1]-1) + frac((frac(s[2]^2, n[2]))^2, n[2]-1) ))) +
scale_x_continuous(breaks = c(0, upper),
labels = c("0", TeX("$t_{1-\\alpha;\\nu}$"))) +
scale_y_continuous(breaks = NULL) +
geom_ribbon(data = dplyr::filter(dados, z > upper),
aes(x = z, y = f, ymin = 0, ymax = f),
fill = "gray") +
theme_classic() +
theme(axis.title = element_text(size = 27.5),
axis.text = element_text(size = 27.5),
title = element_text(size = 27.5)) +
geom_vline(xintercept = 0, color = "black", size = 1) +
geom_segment(x = xmin, xend = upper, y = 0.15, yend =0.15, size = 1, color = "blue") +
geom_segment(x = upper, xend = xmax, y = 0.15, yend =0.15, size = 1, color = "red") +
geom_segment(x = upper, xend = upper, y = 0, yend = 0.15,
linetype = "dashed", color = "gray", size = 1) +
geom_point(data = tibble(x = c(upper), y = c(0.15)),
aes(x = x, y = y), size = 5,color  = "gray") +
annotate("text", x = 3, y = 0.2, label = "H[1]",
size = 10, color = "red", parse = T) +
annotate("text", x = 0.5, y = 0.2, label = "H[0]",
size = 10, color = "blue", parse = T) +
annotate("text", x = 3, y = 0.05, label = "alpha", parse = T,
color = "gray", size = 10) #+
gl <- 10
xmin <- -4
xmax <- 4
z <- seq(from = xmin, to= xmax, by = 0.001)
f <- dt(z, df = gl)
dados <- tibble(z=z, f=f)
a <- 0.05
lower <- qt(a / 2, df = gl)
upper <- qt(1 - a / 2, df = gl)
ggplot(dados)+
geom_line(aes(x = z, y = f), color = "black", size = 1) +
labs(x = TeX("$T_0$"), y = "Função densidade",
title = TeX("Rejeitamos $H_0: \\mu_{1} - \\mu_{2} \\leq \\Delta_{0}$ se $t_0 > t_{1-\\alpha;\\nu}$"),
subtitle = bquote("RC = {" ~ t[0] ~ " | " ~ t[0] > t[1-alpha~';'~nu] ~ "}"),
caption = bquote(nu == frac((frac(s[1]^2, n[1]) + frac(s[2]^2, n[2]))^2,
frac((frac(s[1], n[1]))^2, n[1]-1) + frac((frac(s[2]^2, n[2]))^2, n[2]-1) ))) +
scale_x_continuous(breaks = c(0, upper),
labels = c("0", TeX("$t_{1-\\alpha;\\nu}$"))) +
scale_y_continuous(breaks = NULL) +
geom_ribbon(data = dplyr::filter(dados, z > upper),
aes(x = z, y = f, ymin = 0, ymax = f),
fill = "gray") +
theme_classic() +
theme(axis.title = element_text(size = 27.5),
axis.text = element_text(size = 27.5),
title = element_text(size = 27.5)) +
geom_vline(xintercept = 0, color = "black", size = 1) +
geom_segment(x = xmin, xend = upper, y = 0.15, yend =0.15, size = 1, color = "blue") +
geom_segment(x = upper, xend = xmax, y = 0.15, yend =0.15, size = 1, color = "red") +
geom_segment(x = upper, xend = upper, y = 0, yend = 0.15,
linetype = "dashed", color = "gray", size = 1) +
geom_point(data = tibble(x = c(upper), y = c(0.15)),
aes(x = x, y = y), size = 5,color  = "gray") +
annotate("text", x = 3, y = 0.2, label = "H[1]",
size = 10, color = "red", parse = T) +
annotate("text", x = 0.5, y = 0.2, label = "H[0]",
size = 10, color = "blue", parse = T) +
annotate("text", x = 3, y = 0.05, label = "alpha", parse = T,
color = "gray", size = 10) #+
ggsave("../figures/2-pop-normal-s2-unknown-different-h1-upper.png")
ggsave("../figures/2-pop-normal-s2-unknown-different-h1-upper.pdf")
gl <- 10
xmin <- -4
xmax <- 4
z <- seq(from = xmin, to= xmax, by = 0.001)
f <- dt(z, df = gl)
dados <- tibble(z=z, f=f)
a <- 0.05
lower <- qt(a / 2, df = gl)
upper <- qt(1 - a / 2, df = gl)
ggplot(dados)+
geom_line(aes(x = z, y = f), color = "black", size = 1) +
labs(x = TeX("$T_0$"), y = "Função densidade",
title = TeX("Rejeitamos $H_0: \\mu_{D} = \\Delta_{0}$ se $t_0 < t_{\\frac{\\alpha}{2};n-1}$ ou $t_0 > t_{1-\\frac{\\alpha}{2};n-1}$"),
subtitle = bquote("RC = {" ~ t[0] ~ " | " ~ t[0] < t[frac(alpha, 2)~';'~n-1] ~ " ou " ~ t[0] > t[1-frac(alpha, 2)~';'~n-1] ~ "}")) +
scale_x_continuous(breaks = c(lower, 0, upper),
labels = c(TeX("$t_{\\frac{\\alpha}{2};n-1}$"), "0",
TeX("$t_{1- \\frac{\\alpha}{2}; n-1}$"))) +
scale_y_continuous(breaks = NULL) +
geom_ribbon(data = dplyr::filter(dados, z < lower),
aes(x = z, y = f, ymin = 0, ymax = f),
fill = "gray") +
geom_ribbon(data = dplyr::filter(dados, z > upper),
aes(x = z, y = f, ymin = 0, ymax = f),
fill = "gray") +
theme_classic() +
theme(axis.title = element_text(size = 22.5),
axis.text = element_text(size = 22.5),
title = element_text(size = 22.5)) +
geom_vline(xintercept = 0, color = "black", size = 1) +
geom_segment(x = xmin, xend = lower, y = 0.15, yend =0.15, size = 1, color = "red") +
geom_segment(x = upper, xend = xmax, y = 0.15, yend =0.15, size = 1, color = "red") +
geom_segment(x = lower, xend = upper, y = 0.15, yend =0.15, size = 1, color = "blue") +
geom_segment(x = lower, xend = lower, y = 0, yend = 0.15,
linetype = "dashed", color = "gray", size = 1) +
geom_segment(x = upper, xend = upper, y = 0, yend = 0.15,
linetype = "dashed", color = "gray", size = 1) +
geom_point(data = tibble(x = c(lower, upper), y = c(0.15, 0.15)),
aes(x = x, y = y), size = 5,color  = "gray") +
annotate("text", x = -3, y = 0.175, label = "H[1]",
size = 10, color = "red", parse = T) +
annotate("text", x = 3, y = 0.175, label = "H[1]",
size = 10, color = "red", parse = T) +
annotate("text", x = 0.5, y = 0.175, label = "H[0]",
size = 10, color = "blue", parse = T) +
annotate("text", x = -3, y = 0.05, label = "frac(alpha, 2)", parse = T,
color = "gray", size = 10) +
annotate("text", x = 3, y = 0.05, label = "frac(alpha, 2)", parse = T,
color = "gray", size = 10)
dados <- tibble(x= c(118.8, 122.6, 115.6, 113.6, 119.5, 115.9,115.8, 115.1, 116.9, 115.4, 115.6, 107.9),
y = c(102.1, 105.8, 99.6, 102.7, 98.8, 100.9, 102.8, 98.7, 94.7, 97.8, 99.7, 98.6))
View(dados)
dados %>%
summarise(s1 = sd(x), s2 = sd(y), f0 = (s1 / s2)^2)
dados <- tibble(x= c(118.8, 122.6, 115.6, 113.6, 119.5, 115.9,115.8, 115.1, 116.9, 115.4, 115.6, 107.9),
y = c(102.1, 105.8, 99.6, 102.7, 98.8, 100.9, 102.8, 98.7, 94.7, 97.8, 99.7, 98.6))
dados %>%
summarise(s1 = sd(x), s2 = sd(y), f0 = (s1 / s2)^2)
qf(0.975, df1 = 11, df2 = 11)
qf(0.025, df1 = 11, df2 = 11)
n <- 15
qf(0.975, df1 = 11, df2 = n-1)
qf(0.025, df1 = 11, df2 = n-1)
dados <- tibble(x= c( 206, 188, 205, 187, 194, 193, 207, 185, 189, 213, 192,
210, 194, 178, 205),
y = c( 177, 197, 206, 201, 180, 176, 185, 200, 197, 192, 198,
188, 189, 203, 192
))
dados %>%
summarise(s1 = sd(x), s2 = sd(y), f0 = (s1 / s2)^2)
n <- 15
qf(0.975, df1 = 11, df2 = n-1)
qf(0.025, df1 = 11, df2 = n-1)
n <- 25
qf(0.975, df1 = 11, df2 = n-1)
qf(0.025, df1 = 11, df2 = n-1)
library(readxl)
library(readr)
library(openxlsx)
library(latex2exp)
library(xtable)
library(tidyverse)
samp_size_paired_t_test <- function(m_D, s_D, delta0 = 0, alpha = 0.05, power = 0.95){
aux <- function(k){
k %>%
map_dbl(~ (1 -
pt(pt(1 - alpha, df = .x - 1), df = .x - 1,
ncp = (m_D - delta0) * sqrt(.x) / s_D) -
power)^2)
}
nlminb(4, aux, lower = 3, upper = Inf)$par %>% ceiling()
}
samp_size_paired_t_test(m_D = 25, s_D = 15, delta0 = 0, alpha = 0.05, power = 0.99)
samp_size_paired_t_test <- function(m_D, s_D, delta0 = 0, alpha = 0.05, power = 0.95){
aux <- function(k){
k %>%
map_dbl(~ (1 -
pt(qt(1 - alpha, df = .x - 1), df = .x - 1,
ncp = (m_D - delta0) * sqrt(.x) / s_D) -
power)^2)
}
nlminb(4, aux, lower = 3, upper = Inf)$par %>% ceiling()
}
samp_size_paired_t_test(m_D = 25, s_D = 15, delta0 = 0, alpha = 0.05, power = 0.99)
samp_size_paired_t_test <- function(m_D, s_D, delta0 = 0, alpha = 0.05, power = 0.95){
aux <- function(k){
k %>%
map_dbl(~ (1 -
pt(qt(1 - alpha / 2, df = .x - 1), df = .x - 1,
ncp = (m_D - delta0) * sqrt(.x) / s_D) +
pt(qt(alpha / 2, df = .x - 1), df = .x - 1,
ncp = (m_D - delta0) * sqrt(.x) / s_D)-
power)^2)
}
nlminb(4, aux, lower = 3, upper = Inf)$par %>% ceiling()
}
samp_size_paired_t_test(m_D = 0.3, s_D = 0.5, delta0 = 0, alpha = 0.05, power = 0.99)
samp_size_paired_t_test <- function(m_D, s_D, delta0 = 0, alpha = 0.05, power = 0.95){
aux <- function(k){
k %>%
map_dbl(~ (1 -
pt(qt(1 - alpha, df = .x - 1), df = .x - 1,
ncp = (m_D - delta0) * sqrt(.x) / s_D) -
power)^2)
}
nlminb(4, aux, lower = 3, upper = Inf)$par %>% ceiling()
}
samp_size_paired_t_test(m_D = 25, s_D = 15, delta0 = 0, alpha = 0.05, power = 0.99)
samp_size_paired_t_test <- function(m_D, s_D, delta0 = 0, alpha = 0.05, power = 0.95){
aux <- function(k){
k %>%
map_dbl(~ (1 -
pt(qt(1 - alpha / 2, df = .x - 1), df = .x - 1,
ncp = (m_D - delta0) * sqrt(.x) / s_D) +
pt(qt(alpha / 2, df = .x - 1), df = .x - 1,
ncp = (m_D - delta0) * sqrt(.x) / s_D)-
power)^2)
}
nlminb(4, aux, lower = 3, upper = Inf)$par %>% ceiling()
}
samp_size_paired_t_test(m_D = 0.3, s_D = 0.5, delta0 = 0, alpha = 0.05, power = 0.99)
samp_size_paired_t_test <- function(m_D, s_D, delta0 = 0, alpha = 0.05, power = 0.95){
aux <- function(k){
k %>%
map_dbl(~ (1 -
pt(qt(1 - alpha, df = .x - 1), df = .x - 1,
ncp = (m_D - delta0) * sqrt(.x) / s_D) -
power)^2)
}
nlminb(4, aux, lower = 3, upper = Inf)$par %>% ceiling()
}
samp_size_paired_t_test(m_D = 25, s_D = 15, delta0 = 0, alpha = 0.05, power = 0.99)
samp_size_paired_t_test <- function(m_D, s_D, delta0 = 0, alpha = 0.05, power = 0.95){
aux <- function(k){
k %>%
map_dbl(~ (1 -
pt(qt(1 - alpha, df = .x - 1), df = .x - 1,
ncp = (m_D - delta0) * sqrt(.x) / s_D) -
power)^2)
}
nlminb(4, aux, lower = 3, upper = Inf)$par %>% ceiling()
}
samp_size_paired_t_test(m_D = 25, s_D = 15, delta0 = 0, alpha = 0.05, power = 0.99)
rho <- 0.95
s2_D <- 10
mu_1 <- 15
mu_2 <- 20
s2 <- s2_D / (2 * (1 + rho))
rho <- 0.95
s2_D <- 10
mu_1 <- 15
mu_2 <- 20
s2 <- s2_D / (2 * (1 + rho))
covi <- s2 * rho
?mvtnorm::rmvnorm
cbind(c(s2, covi), c(covi, s2))
set.seed(1235813)
rho <- 0.95
s2_D <- 10
mu_1 <- 15
mu_2 <- 20
s2 <- s2_D / (2 * (1 + rho))
covi <- s2 * rho
n <- 20
matriz <- mvtnorm::rmvnorm(n, mean = c(mu_1, mu_2),
sigma = cbind(c(s2, covi), c(covi, s2)))
View(matriz)
set.seed(1235813)
rho <- 0.95
s2_D <- 10
mu_1 <- 15
mu_2 <- 20
s2 <- s2_D / (2 * (1 + rho))
covi <- s2 * rho
n <- 20
matriz <- mvtnorm::rmvnorm(n, mean = c(mu_1, mu_2),
sigma = cbind(c(s2, covi), c(covi, s2))) %>%
tibble()
View(matriz)
dados <- tibble(x1 = matriz[,1], x2 = matriz[,2])
matriz <- mvtnorm::rmvnorm(n, mean = c(mu_1, mu_2),
sigma = cbind(c(s2, covi), c(covi, s2)))
dados <- tibble(x1 = matriz[,1], x2 = matriz[,2])
View(dados)
dados %>%
summarise(m1 = mean(x1), m2 = mean(x2), s1 = sd(x1), s2 = sd(x2))
set.seed(1235813)
rho <- 0.95
s2_D <- 10
mu_1 <- 15
mu_2 <- 20
s2 <- s2_D / (2 * (1 + rho))
covi <- s2 * rho
n <- 20
matriz <- mvtnorm::rmvnorm(n, mean = c(mu_1, mu_2),
sigma = cbind(c(s2, covi), c(covi, s2)))
dados <- tibble(x1 = matriz[,1], x2 = matriz[,2])
tab <- dados %>%
summarise(m1 = mean(x1), m2 = mean(x2), s1 = sd(x1), s2 = sd(x2))
View(tab)
tab <- dados %>%
summarise(m1 = mean(x1), m2 = mean(x2), s_D = sd(x1 - x2))
View(tab)
samp_size_paired_t_test <- function(m_D, s_D, delta0 = 0, alpha = 0.05, power = 0.95){
aux <- function(k){
k %>%
map_dbl(~ (pt(qt(alpha, df = .x - 1), df = .x - 1,
ncp = (m_D - delta0) * sqrt(.x) / s_D) -
power)^2)
}
nlminb(4, aux, lower = 3, upper = Inf)$par %>% ceiling()
}
samp_size_paired_t_test(m_D = 15, s_D = 20, delta0 = 0, alpha = 0.05, power = 0.99)
samp_size_paired_t_test <- function(m_D, s_D, delta0 = 0, alpha = 0.05, power = 0.95){
aux <- function(k){
k %>%
map_dbl(~ (pt(qt(alpha, df = .x - 1), df = .x - 1,
ncp = (m_D - delta0) * sqrt(.x) / s_D) -
power)^2)
}
nlminb(4, aux, lower = 3, upper = Inf)$par %>% ceiling()
}
samp_size_paired_t_test(m_D = -5, s_D = 20, delta0 = 0, alpha = 0.05, power = 0.99)
tab <- tibble(`Gênero` = c("Masculino","Feminino"),
`Não-Fumante` = c(80,40),
Fumante = c(120,60)) %>%
gather(`Não-Fumante`, Fumante, key = "tabagismo", value = "Freq") %>%
group_by(tabagismo) %>%
mutate(freq_rel = 100*Freq / sum(Freq))
ggplot(tab) +
geom_bar(aes(x = tabagismo,y=freq_rel,fill=`Gênero`),
stat = "identity", position = "fill")+
xlab("Tabagismo")+
ylab("Porcentagem")+
ggtitle("Associação entre Gênero e Tabagismo.")+
scale_y_continuous(breaks = c(0,.25,.50,.75,1),
labels = str_c(c(0,25,50,75,100), "%"))  +
theme_classic() +
theme(axis.text = element_text(size = 25),
axis.title = element_text(size = 25),
plot.title = element_text(size = 25),
legend.title = element_text(size = 20),
legend.text = element_text(size = 20))
ggsave('../figures/nao_associacao.png')
ggsave('../figures/nao_associacao.pdf')
tab <- tibble(`Gênero` = c("Masculino","Feminino"),
`Não-Fumante` = c(80,40),
Fumante = c(120,60)) %>%
gather(`Não-Fumante`, Fumante, key = "tabagismo", value = "Freq") %>%
group_by(tabagismo) %>%
mutate(freq_rel = 100*Freq / sum(Freq))
ggplot(tab) +
geom_bar(aes(x = tabagismo,y=freq_rel,fill=`Gênero`),
stat = "identity", position = "fill")+
xlab("Tabagismo")+
ylab("Porcentagem")+
ggtitle("Associação entre Gênero e Tabagismo.")+
scale_y_continuous(breaks = c(0,.25,.50, 0.6,.75,1),
labels = str_c(c(0,25,50,60,75,100), "%"))  +
theme_classic() +
theme(axis.text = element_text(size = 25),
axis.title = element_text(size = 25),
plot.title = element_text(size = 25),
legend.title = element_text(size = 20),
legend.text = element_text(size = 20))
ggsave('../figures/nao_associacao.png')
ggsave('../figures/nao_associacao.pdf')
tab
tab <- tibble(`Gênero` = c("Masculino","Feminino"),
`Não-Fumante` = c(80,40),
Fumante = c(120,60)) %>%
gather(`Não-Fumante`, Fumante, key = "tabagismo", value = "Freq") %>%
group_by(tabagismo) %>%
mutate(freq_rel = 100*Freq / sum(Freq))
ggplot(tab) +
geom_bar(aes(x = tabagismo,y=freq_rel,fill=`Gênero`),
stat = "identity", position = "fill")+
xlab("Tabagismo")+
ylab("Porcentagem")+
ggtitle("Associação entre Gênero e Tabagismo.")+
scale_y_continuous(breaks = c(0,.25,.50, 0.6667, 0.75,1),
labels = str_c(c(0,25,50,"66,67",75,100), "%"))  +
theme_classic() +
theme(axis.text = element_text(size = 25),
axis.title = element_text(size = 25),
plot.title = element_text(size = 25),
legend.title = element_text(size = 20),
legend.text = element_text(size = 20))
ggsave('../figures/nao_associacao.png')
ggsave('../figures/nao_associacao.pdf')
tab <- tibble(`Gênero` = c("Masculino","Feminino"),
`Não-Fumante` = c(80,40),
Fumante = c(120,60)) %>%
gather(`Não-Fumante`, Fumante, key = "tabagismo", value = "Freq") %>%
group_by(tabagismo) %>%
mutate(freq_rel = 100*Freq / sum(Freq))
ggplot(tab) +
geom_bar(aes(x = tabagismo,y=freq_rel,fill=`Gênero`),
stat = "identity", position = "fill")+
xlab("Tabagismo")+
ylab("Porcentagem")+
ggtitle("Associação entre Gênero e Tabagismo.")+
scale_y_continuous(breaks = c(0,.25,.50, 0.6667,1),
labels = str_c(c(0,25,50,"66,67",100), "%"))  +
theme_classic() +
theme(axis.text = element_text(size = 25),
axis.title = element_text(size = 25),
plot.title = element_text(size = 25),
legend.title = element_text(size = 20),
legend.text = element_text(size = 20))
ggsave('../figures/nao_associacao.png')
ggsave('../figures/nao_associacao.pdf')
n <- 25
a <- 0.05
xi <- 1.19
library(readxl)
library(readr)
library(openxlsx)
library(latex2exp)
library(xtable)
library(tidyverse)
(exp(2 * z1 / sqrt(n-3) + xi) - 1) / (exp(2 * z1 / sqrt(n-3) + xi) + 1)
n <- 25
a <- 0.05
xi <- 1.19
z1 <- -1.96
z2 <- 1.96
(exp(2 * z1 / sqrt(n-3) + xi) - 1) / (exp(2 * z1 / sqrt(n-3) + xi) + 1)
n <- 25
a <- 0.05
xi <- 1.19
z1 <- -1.96
z2 <- 1.96
(exp(2 * z1 / sqrt(n-3) + 2 * xi) - 1) / (exp(2 * z1 / sqrt(n-3) + 2 * xi) + 1)
(exp(2 * z2 / sqrt(n-3) + 2 * xi) - 1) / (exp(2 * z2 / sqrt(n-3) + 2 * xi) + 1)
q()
