geom_line(aes(x, y = y_k2, color = "c1"), size = 1) +
geom_line(aes(x, y = y_k5, color = "c2"), size = 1) +
geom_line(aes(x, y = y_k10, color = "c3"), size = 1) +
scale_color_manual("Graus de liberdade",
labels = c("k = 2", "k = 5", "k = 10"),
values = c("c1" = "blue", "c2" = "red", "c3" = "black")) +
labs(x = "", y = "Função densidade de probabilidade") +
theme_minimal() +
theme(axis.title = element_text(size = 25),
axis.text = element_text(size = 20))
ggplot(dados)+
geom_line(aes(x, y = y_k2, color = "c1"), size = 1) +
geom_line(aes(x, y = y_k5, color = "c2"), size = 1) +
geom_line(aes(x, y = y_k10, color = "c3"), size = 1) +
scale_color_manual("Graus de liberdade",
labels = c("k = 2", "k = 5", "k = 10"),
values = c("c1" = "blue", "c2" = "red", "c3" = "black")) +
labs(x = "", y = "Função densidade de probabilidade") +
theme_minimal() +
theme(axis.title = element_text(size = 25),
axis.text = element_text(size = 20),
legend.title = element_text(size = 20),
legend.text = element_text(size = 15))
por <- 0.0001
x <- seq(from = por, to = 25, by = por)
dados <- tibble(x = x,
y_k2 = dchisq(x, df = 2),
y_k5  = dchisq(x, df = 5),
y_k10 = dchisq(x, df = 10))
ggplot(dados)+
geom_line(aes(x, y = y_k2, color = "c1"), size = 1) +
geom_line(aes(x, y = y_k5, color = "c2"), size = 1) +
geom_line(aes(x, y = y_k10, color = "c3"), size = 1) +
scale_color_manual("Graus de liberdade",
labels = c("k = 2", "k = 5", "k = 10"),
values = c("c1" = "blue", "c2" = "red", "c3" = "black")) +
labs(x = "", y = "Função densidade") +
theme_minimal() +
theme(axis.title = element_text(size = 25),
axis.text = element_text(size = 20),
legend.title = element_text(size = 20),
legend.text = element_text(size = 15))
por <- 0.0001
x <- seq(from = por, to = 25, by = por)
dados <- tibble(x = x,
y_k2 = dchisq(x, df = 2),
y_k5  = dchisq(x, df = 5),
y_k10 = dchisq(x, df = 10))
ggplot(dados)+
geom_line(aes(x, y = y_k2, color = "c1"), size = 1) +
geom_line(aes(x, y = y_k5, color = "c2"), size = 1) +
geom_line(aes(x, y = y_k10, color = "c3"), size = 1) +
scale_color_manual("Graus de liberdade",
labels = c("k = 2", "k = 5", "k = 10"),
values = c("c1" = "blue", "c2" = "red", "c3" = "black")) +
labs(x = "", y = "função densidade") +
theme_minimal() +
theme(axis.title = element_text(size = 25),
axis.text = element_text(size = 20),
legend.title = element_text(size = 20),
legend.text = element_text(size = 15))
por <- 0.0001
x <- seq(from = por, to = 25, by = por)
dados <- tibble(x = x,
y_k2 = dchisq(x, df = 2),
y_k5  = dchisq(x, df = 5),
y_k10 = dchisq(x, df = 10))
ggplot(dados)+
geom_line(aes(x, y = y_k2, color = "c1"), size = 1) +
geom_line(aes(x, y = y_k5, color = "c2"), size = 1) +
geom_line(aes(x, y = y_k10, color = "c3"), size = 1) +
scale_color_manual("Graus de liberdade",
labels = c("k = 2", "k = 5", "k = 10"),
values = c("c1" = "blue", "c2" = "red", "c3" = "black")) +
labs(x = "", y = "função densidade") +
theme_minimal() +
theme(axis.title = element_text(size = 25),
axis.text = element_text(size = 20),
legend.title = element_text(size = 20),
legend.text = element_text(size = 15))
ggsave("fd_qui_quadrado.pdf")
ggsave("fd_qui_quadrado.png")
por <- 0.0001
x <- seq(from = por, to = 25, by = por)
dados <- tibble(x = x,
y_k2 = dchisq(x, df = 2),
y_k5  = dchisq(x, df = 5),
y_k10 = dchisq(x, df = 10))
ggplot(dados)+
geom_line(aes(x, y = y_k2, color = "c1"), size = 1) +
geom_line(aes(x, y = y_k5, color = "c2"), size = 1) +
geom_line(aes(x, y = y_k10, color = "c3"), size = 1) +
scale_color_manual("Graus de liberdade",
labels = c("k = 2", "k = 5", "k = 10"),
values = c("c1" = "blue", "c2" = "red", "c3" = "black")) +
labs(x = "x", y = "função densidade") +
theme_minimal() +
theme(axis.title = element_text(size = 25),
axis.text = element_text(size = 20),
legend.title = element_text(size = 20),
legend.text = element_text(size = 15))
ggsave("fd_qui_quadrado.pdf")
ggsave("fd_qui_quadrado.png")
library(readxl)
library(xlsx)
library(latex2exp)
library(tidyverse)
p <- c(0.005, 0.010, 0.025, 0.050, 0.100, 0.500, 0.900, 0.950, 0.975, 0.990, 0.995)
tb
gl <- c(1:30, seq(from = 40, to = 60, by = 5)
gl <- c(1:30, seq(from = 40, to = 60, by = 5))
gl
gl <- c(1:30, seq(from = 40, to = 60, by = 5), seq(from = 70, to = 120, by = 10))
gl
?pchisq
p <- c(0.005, 0.010, 0.025, 0.050, 0.100, 0.500, 0.900, 0.950, 0.975, 0.990, 0.995)
gl <- c(1:30, seq(from = 40, to = 60, by = 5), seq(from = 70, to = 120, by = 10))
tb <- p %>%
sapply(function(p){
gl %>%
map_dbl(~ pchisq(p, df = .x))
})
str_c(p)
p <- c(0.005, 0.010, 0.025, 0.050, 0.100, 0.500, 0.900, 0.950, 0.975, 0.990, 0.995)
gl <- c(1:30, seq(from = 40, to = 60, by = 5), seq(from = 70, to = 120, by = 10))
tb <- p %>%
sapply(function(p){
gl %>%
map_dbl(~ pchisq(p, df = .x))
})
colnames(tb) <- str_c(p)
rownames(tb) <- st_c(gl)
p <- c(0.005, 0.010, 0.025, 0.050, 0.100, 0.500, 0.900, 0.950, 0.975, 0.990, 0.995)
gl <- c(1:30, seq(from = 40, to = 60, by = 5), seq(from = 70, to = 120, by = 10))
tb <- p %>%
sapply(function(p){
gl %>%
map_dbl(~ pchisq(p, df = .x))
})
colnames(tb) <- str_c(p)
rownames(tb) <- str_c(gl)
View(tb)
p <- c(0.005, 0.010, 0.025, 0.050, 0.100, 0.500, 0.900, 0.950, 0.975, 0.990, 0.995)
gl <- c(1:30, seq(from = 40, to = 60, by = 5), seq(from = 70, to = 120, by = 10))
tb <- p %>%
sapply(function(p){
gl %>%
map_dbl(~ pchisq(p, df = .x))
})
colnames(tb) <- str_c(p)
rownames(tb) <- str_c(gl)
write.xlsx(tb, "table_chi_square.xlsx")
p <- c(0.005, 0.010, 0.025, 0.050, 0.100, 0.500, 0.900, 0.950, 0.975, 0.990, 0.995)
gl <- c(1:30, seq(from = 40, to = 60, by = 5), seq(from = 70, to = 120, by = 10))
tb <- p %>%
sapply(function(p){
gl %>%
map_dbl(~ qchisq(p, df = .x))
})
colnames(tb) <- str_c(p)
rownames(tb) <- str_c(gl)
write.xlsx(tb, "table_chi_square.xlsx")
?rmarkdown::pdf_document
x <- c(16.8, 17.2, 17.4, 16.9, 16.5, 17.1)
library(readxl)
library(xlsx)
library(latex2exp)
library(tidyverse)
x <- c(16.8, 17.2, 17.4, 16.9, 16.5, 17.1)
mean(x)
sd(x)
library(readxl)
library(xlsx)
library(latex2exp)
library(tidyverse)
media <- 5000
taxa <- 1 / media
media <- 5000
taxa <- 1 / media
amostras <- rexp(10, rate = taxa) %>% round(digits = 2)
set.seed(1235813)
media <- 5000
taxa <- 1 / media
amostras <- rexp(10, rate = taxa) %>% round(digits = 2)
set.seed(1235813)
media <- 5000
taxa <- 1 / media
amostras <- rexp(10, rate = taxa) %>% round(digits = 2)
amostras
set.seed(1235813)
media <- 5000
taxa <- 1 / media
amostras <- rexp(10, rate = taxa) %>% round(digits = 2)
amostras
mean(amostras)
30*12*24
set.seed(1235813)
media <- 2000
taxa <- 1 / media
amostras <- rexp(10, rate = taxa) %>% round(digits = 2)
amostras
mean(amostras)
set.seed(1235813)
media <- 2000
taxa <- 1 / media
amostras <- rexp(300, rate = taxa) %>% round(digits = 2)
amostras
mean(amostras)
set.seed(1235813)
media <- 2000
taxa <- 1 / media
amostras <- rexp(100, rate = taxa) %>% round(digits = 2)
amostras
mean(amostras)
library(readxl)
library(xlsx)
library(latex2exp)
library(tidyverse)
library(readxl)
library(xlsx)
library(latex2exp)
library(tidyverse)
x <- seq(from = 0, to = 2, by = 0.0001)
x <- seq(from = 0, to = 2, by = 0.00001)
y <- x %>% map_dbl(~ .x * (1 - .x))
x <- seq(from = 0, to = 1, by = 0.00001)
y <- x %>% map_dbl(~ .x * (1 - .x))
tibble(x, y) %>%
ggplot() +
geom_line(aes(x, y), color = "blue")
tibble(x, y) %>%
ggplot() +
geom_line(aes(x, y), color = "blue")+
lims(x = c(0,2), y = c(0,1))
tibble(x, y) %>%
ggplot() +
geom_line(aes(x, y), color = "blue")+
lims(x = c(0,2), y = c(0,1)) +
labs(y = TeX("$p \\cdot (1-p)$"))
tibble(x, y) %>%
ggplot() +
geom_line(aes(x, y), color = "blue")+
lims(x = c(0,2), y = c(0,1)) +
labs(y = TeX("$p \\cdot (1-p)$"), x = "$p$")
tibble(x, y) %>%
ggplot() +
geom_line(aes(x, y), color = "blue")+
lims(x = c(0,2), y = c(0,1)) +
labs(y = TeX("$p \\cdot (1-p)$"), x = TeX("$p$"))
tibble(x, y) %>%
ggplot() +
geom_line(aes(x, y), color = "blue")+
lims(x = c(0,2), y = c(0,1)) +
labs(y = TeX("$p \\cdot (1-p)$"), x = TeX("$p$"))+
scale_x_continuous(breaks = c(0, 1))
tibble(x, y) %>%
ggplot() +
geom_line(aes(x, y), color = "blue")+
lims(x = c(0,2), y = c(0,1)) +
labs(y = TeX("$p \\cdot (1-p)$"), x = TeX("$p$"))+
scale_x_continuous(breaks = c(0, 1))
?scale_x_continuous()
tibble(x, y) %>%
ggplot() +
geom_line(aes(x, y), color = "blue")+
labs(y = TeX("$p \\cdot (1-p)$"), x = TeX("$p$"))+
scale_x_continuous(breaks = c(0, 1), limits = c(0,2))
tibble(x, y) %>%
ggplot() +
geom_line(aes(x, y), color = "blue")+
labs(y = TeX("$p \\cdot (1-p)$"), x = TeX("$p$"))+
scale_x_continuous(breaks = c(0, 1), limits = c(0,2)) +
scale_y_continuous(breaks = c(1/4), limits = c(0, 1),
labels = TeX("$\\frac{1}{4}$"))
tibble(x, y) %>%
ggplot() +
geom_line(aes(x, y), color = "blue")+
labs(y = TeX("$p \\cdot (1-p)$"), x = TeX("$p$"))+
scale_x_continuous(breaks = c(0, 1), limits = c(0,1.2)) +
scale_y_continuous(breaks = c(1/4), limits = c(0, 1),
labels = TeX("$\\frac{1}{4}$"))
tibble(x, y) %>%
ggplot() +
geom_line(aes(x, y), color = "blue")+
labs(y = TeX("$p \\cdot (1-p)$"), x = TeX("$p$"))+
scale_x_continuous(breaks = c(0, 1), limits = c(0,1.2)) +
scale_y_continuous(breaks = c(1/4), limits = c(0, 1),
labels = TeX("$\\frac{1}{4}$")) +
theme_minimal()
tibble(x, y) %>%
ggplot() +
geom_line(aes(x, y), color = "blue")+
labs(y = TeX("$p \\cdot (1-p)$"), x = TeX("$p$"))+
scale_x_continuous(breaks = c(0, 1), limits = c(0,1.2)) +
scale_y_continuous(breaks = c(0, 1/4), limits = c(0, 1),
labels = c(0, TeX("$\\frac{1}{4}$"))) +
theme_minimal()
geom_segment()
?geom_segment()
tibble(x, y) %>%
ggplot() +
geom_line(aes(x, y), color = "blue")+
labs(y = TeX("$p \\cdot (1-p)$"), x = TeX("$p$"))+
scale_x_continuous(breaks = c(0, 1), limits = c(0,1.2)) +
scale_y_continuous(breaks = c(0, 1/4), limits = c(0, 1),
labels = c(0, TeX("$\\frac{1}{4}$"))) +
theme_minimal() +
geom_segment(aes(x = 0, y = 1/4, x = 1/2, y = 1/4))
tibble(x, y) %>%
ggplot() +
geom_line(aes(x, y), color = "blue")+
labs(y = TeX("$p \\cdot (1-p)$"), x = TeX("$p$"))+
scale_x_continuous(breaks = c(0, 1), limits = c(0,1.2)) +
scale_y_continuous(breaks = c(0, 1/4), limits = c(0, 1),
labels = c(0, TeX("$\\frac{1}{4}$"))) +
theme_minimal() +
geom_segment(x = 0, y = 1/4, x = 1/2, y = 1/4)
tibble(x, y) %>%
ggplot() +
geom_line(aes(x, y), color = "blue")+
labs(y = TeX("$p \\cdot (1-p)$"), x = TeX("$p$"))+
scale_x_continuous(breaks = c(0, 1), limits = c(0,1.2)) +
scale_y_continuous(breaks = c(0, 1/4), limits = c(0, 1),
labels = c(0, TeX("$\\frac{1}{4}$"))) +
theme_minimal() +
geom_segment(x = 0, y = 1/4, xend = 1/2, yend = 1/4)
tibble(x, y) %>%
ggplot() +
geom_line(aes(x, y), color = "blue")+
labs(y = TeX("$p \\cdot (1-p)$"), x = TeX("$p$"))+
scale_x_continuous(breaks = c(0, 1), limits = c(0,1.2)) +
scale_y_continuous(breaks = c(0, 1/4), limits = c(0, 1),
labels = c(0, TeX("$\\frac{1}{4}$"))) +
theme_minimal() +
geom_segment(x = 0, y = 1/4, xend = 1/2, yend = 1/4, linetype = "dotted")
tibble(x, y) %>%
ggplot() +
geom_line(aes(x, y), color = "blue")+
labs(y = TeX("$p \\cdot (1-p)$"), x = TeX("$p$"))+
scale_x_continuous(breaks = c(0, 1), limits = c(0,1.2)) +
scale_y_continuous(breaks = c(0, 1/4), limits = c(0, 1),
labels = c(0, TeX("$\\frac{1}{4}$"))) +
theme_minimal() +
geom_segment(x = 0, y = 1/4, xend = 1/2, yend = 1/4, linetype = "dashed")
tibble(x, y) %>%
ggplot() +
geom_line(aes(x, y), color = "blue")+
labs(y = TeX("$p \\cdot (1-p)$"), x = TeX("$p$"))+
scale_x_continuous(breaks = c(0, 1), limits = c(0,1.2)) +
scale_y_continuous(breaks = c(0, 1/4), limits = c(0, 1),
labels = c(0, TeX("$\\frac{1}{4}$"))) +
theme_minimal() +
geom_segment(x = 0, y = 1/4, xend = 1/2, yend = 1/4, linetype = "dashed") +
geom_segment(x = 1/2, y = 0, x = 1/2, y = 1/4, linetype = "dashed")
tibble(x, y) %>%
ggplot() +
geom_line(aes(x, y), color = "blue")+
labs(y = TeX("$p \\cdot (1-p)$"), x = TeX("$p$"))+
scale_x_continuous(breaks = c(0, 1), limits = c(0,1.2)) +
scale_y_continuous(breaks = c(0, 1/4), limits = c(0, 1),
labels = c(0, TeX("$\\frac{1}{4}$"))) +
theme_minimal() +
geom_segment(x = 0, y = 1/4, xend = 1/2, yend = 1/4, linetype = "dashed") +
geom_segment(x = 1/2, y = 0, xend = 1/2, yend = 1/4, linetype = "dashed")
tibble(x, y) %>%
ggplot() +
geom_line(aes(x, y), color = "blue", size = 1)+
labs(y = TeX("$p \\cdot (1-p)$"), x = TeX("$p$"))+
scale_x_continuous(breaks = c(0, 1), limits = c(0,1.2)) +
scale_y_continuous(breaks = c(0, 1/4), limits = c(0, 1),
labels = c(0, TeX("$\\frac{1}{4}$"))) +
theme_minimal() +
geom_segment(x = 0, y = 1/4, xend = 1/2, yend = 1/4, linetype = "dashed", size = 1) +
geom_segment(x = 1/2, y = 0, xend = 1/2, yend = 1/4, linetype = "dashed", size = 1)
tibble(x, y) %>%
ggplot() +
geom_line(aes(x, y), color = "blue", size = 1)+
labs(y = TeX("$p \\cdot (1-p)$"), x = TeX("$p$"))+
scale_x_continuous(breaks = c(0, 1), limits = c(0,1.2)) +
scale_y_continuous(breaks = c(0, 1/4), limits = c(0, 1),
labels = c(0, TeX("$\\frac{1}{4}$"))) +
theme_minimal() +
geom_segment(x = 0, y = 1/4, xend = 1/2, yend = 1/4, linetype = "dashed", size = 1) +
geom_segment(x = 1/2, y = 0, xend = 1/2, yend = 1/4, linetype = "dashed", size = 1) +
theme(axis.title = element_text(size = 25),
axis.text = element_text(size = 20))
x <- seq(from = 0, to = 1, by = 0.00001)
y <- x %>% map_dbl(~ .x * (1 - .x))
tibble(x, y) %>%
ggplot() +
geom_line(aes(x, y), color = "blue", size = 1)+
labs(y = TeX("$p \\cdot (1-p)$"), x = TeX("$p$"))+
scale_x_continuous(breaks = c(0, 1), limits = c(0,1.2)) +
scale_y_continuous(breaks = c(0, 1/4), limits = c(0, 1),
labels = c(0, TeX("$\\frac{1}{4}$"))) +
theme_minimal() +
geom_segment(x = 0, y = 1/4, xend = 1/2, yend = 1/4, linetype = "dashed", size = 1) +
geom_segment(x = 1/2, y = 0, xend = 1/2, yend = 1/4, linetype = "dashed", size = 1) +
theme(axis.title = element_text(size = 25),
axis.text = element_text(size = 20))
ggsave("proportion.png")
ggsave("proportion.pdf")
tibble(x, y) %>%
ggplot() +
geom_line(aes(x, y), color = "blue", size = 1)+
labs(y = TeX("$p \\cdot (1-p)$"), x = TeX("$p$"))+
scale_x_continuous(breaks = c(0, 1/2, 1), limits = c(0,1.2),
labels = c("0", TeX("$\\frac{1}{2}$", "1"))) +
scale_y_continuous(breaks = c(0, 1/4), limits = c(0, 1),
labels = c(0, TeX("$\\frac{1}{4}$"))) +
theme_minimal() +
geom_segment(x = 0, y = 1/4, xend = 1/2, yend = 1/4, linetype = "dashed", size = 1) +
geom_segment(x = 1/2, y = 0, xend = 1/2, yend = 1/4, linetype = "dashed", size = 1) +
theme(axis.title = element_text(size = 25),
axis.text = element_text(size = 20))
tibble(x, y) %>%
ggplot() +
geom_line(aes(x, y), color = "blue", size = 1)+
labs(y = TeX("$p \\cdot (1-p)$"), x = TeX("$p$"))+
scale_x_continuous(breaks = c(0, 1/2, 1), limits = c(0,1.2),
labels = c("0", TeX("$\\frac{1}{2}$"),"1")) +
scale_y_continuous(breaks = c(0, 1/4), limits = c(0, 1),
labels = c(0, TeX("$\\frac{1}{4}$"))) +
theme_minimal() +
geom_segment(x = 0, y = 1/4, xend = 1/2, yend = 1/4, linetype = "dashed", size = 1) +
geom_segment(x = 1/2, y = 0, xend = 1/2, yend = 1/4, linetype = "dashed", size = 1) +
theme(axis.title = element_text(size = 25),
axis.text = element_text(size = 20))
x <- seq(from = 0, to = 1, by = 0.00001)
y <- x %>% map_dbl(~ .x * (1 - .x))
tibble(x, y) %>%
ggplot() +
geom_line(aes(x, y), color = "blue", size = 1)+
labs(y = TeX("$p \\cdot (1-p)$"), x = TeX("$p$"))+
scale_x_continuous(breaks = c(0, 1/2, 1), limits = c(0,1.2),
labels = c("0", TeX("$\\frac{1}{2}$"),"1")) +
scale_y_continuous(breaks = c(0, 1/4), limits = c(0, 1),
labels = c(0, TeX("$\\frac{1}{4}$"))) +
theme_minimal() +
geom_segment(x = 0, y = 1/4, xend = 1/2, yend = 1/4, linetype = "dashed", size = 1) +
geom_segment(x = 1/2, y = 0, xend = 1/2, yend = 1/4, linetype = "dashed", size = 1) +
theme(axis.title = element_text(size = 25),
axis.text = element_text(size = 20))
ggsave("proportion.png")
ggsave("proportion.pdf")
x <- seq(from = 0, to = 1, by = 0.00001)
y <- x %>% map_dbl(~ .x * (1 - .x))
tibble(x, y) %>%
ggplot() +
geom_line(aes(x, y), color = "blue", size = 1)+
labs(y = TeX("$p \\cdot (1-p)$"), x = TeX("$p$"))+
scale_x_continuous(breaks = c(0, 1/2, 1), limits = c(0,1.2),
labels = c("0", TeX("$\\frac{1}{2}$"),"1")) +
scale_y_continuous(breaks = c(0, 1/4), limits = c(0, 1),
labels = c(0, TeX("$\\frac{1}{4}$"))) +
theme_minimal() +
geom_segment(x = 0, y = 1/4, xend = 1/2, yend = 1/4, linetype = "dashed", size = 1) +
geom_segment(x = 1/2, y = 0, xend = 1/2, yend = 1/4, linetype = "dashed", size = 1) +
theme(axis.title = element_text(size = 30),
axis.text = element_text(size = 25))
ggsave("../proportion.png")
ggsave("../proportion.pdf")
?sup
library(readxl)
library(xlsx)
library(latex2exp)
library(tidyverse)
suporte <- 0:5
?probs
probs <- c(0.5, rep(0.1, 5))
probs <- c(0.3, rep(0.1, ))
probs <- c(0.3, rep(0.1, 5))
probs <- c(0.3, 0.2, rep(0.1, 4))
sum(probs)
probs <- c(0.2, 0.2, rep(0.1, 4))
sum(probs)
probs <- c(0.2, 0.4, rep(0.1, 4))
sum(probs)
set.seed(1235813)
suporte <- 0:5
probs <- c(0.2, 0.4, rep(0.1, 4))
n <- 15
amostras <- sample(suporte, n, prob = probs, replace = F)
set.seed(1235813)
suporte <- 0:5
probs <- c(0.2, 0.4, rep(0.1, 4))
n <- 15
amostras <- sample(suporte, n, prob = probs, replace = T)
amostras
sum(suporte * probs)
set.seed(1235813)
suporte <- 0:5
probs <- c(0.2, 0.4, rep(0.1, 4))
n <- 15
amostras <- sample(suporte, n, prob = probs, replace = T)
mean(amostras)
set.seed(1235813)
suporte <- 0:5
probs <- c(0.2, 0.4, rep(0.1, 4))
n <- 15
amostras <- sample(suporte, n, prob = probs, replace = T)
mean(amostras)
sd(amostras)
?rpois
set.seed(1235813)
media <- 100
rpois(20, lambda = media)
set.seed(1235813)
media <- 100
amostras <- rpois(20, lambda = media)
mean(amostras)
sd(amostras)
