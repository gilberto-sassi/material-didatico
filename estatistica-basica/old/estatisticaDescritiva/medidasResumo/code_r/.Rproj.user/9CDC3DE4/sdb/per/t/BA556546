{
    "collab_server" : "",
    "contents" : "#packages used\nlibrary(tidyverse)\nlibrary(lvplot)\nlibrary(latex2exp)\nlibrary(truncdist)\n\n#Mean\n\n#example mean -- turma 1 de estatística aplicada à saúde\n\n\n#checking  the distribution of notas\nx <- seq(from=0,to=1,by=0.001)\ny <- dbeta(x,shape1 = 12, shape2 = 5)\ntibble(x=x,y=y) %>%\n  ggplot()+\n  geom_line(aes(x,y), color='blue')\n\nset.seed(54321) #fixing the seed\nnotas <- (rbeta(10, 10,5) * 10) %>% round(2)\nmean(notas)\n\n#exemplo erros de página\ntibble(x = 0:4, freq = c(25,20,3,1,1)) %>%\n  ggplot() +\n  geom_bar(aes(x=x, y=freq), stat = 'identity')+\n  xlab('Erros de impressão') +\n  ylab('Frequência')\nggsave('erros_livro.png')\nggsave('erros_liivro.pdf')\n\n#exemplo de motivação para medidas de dispersão\nx <- 3:7\nmean((x-mean(x))^2)\nmean(abs(x-mean(x)))\ny <- seq(from=1,to=9,by=2)\nmean((y-mean(y))^2)\nmean(abs(y-mean(y)))\nz <- rep(5,5)\nmean((z-mean(z))^2)\nmean(abs(z-mean(z)))\nw <- c(4,5,5,5,6)\nmean((w-mean(w))^2)\nmean(abs(w-mean(w)))\n\n\n#exemplo medidas de dispersão\nset.seed(54321) #fixing the seed\nnotas <- (rbeta(5, 10,5) * 10) %>% round(2)\nmean(notas)\nmean(abs(notas - mean(notas)))\nmean((notas - mean(notas))^2)\nsqrt( mean((notas - mean(notas))^2) )\n\n#rapid digitation -  número de filhos\nz <- 0:5\nfreq_z <- c(20,5,7,3,0,1)\nmedia <- round( sum( z*freq_z ) / 36, 2)\nsum(freq_z * abs(z-media)) / 36\nsum(freq_z * (z-media)^2) / 36\nsqrt(sum(freq_z * (z-media)^2) / 36)\nstr_c(freq_z,'\\\\cdot \\\\left\\\\vert',z,'-', media, '\\\\right\\\\vert+', collapse = '')\nstr_c(freq_z,'\\\\cdot (',z,'-', media, ')^2+', collapse = '')\n\n#rapid digitation -- salario\ns <- seq(from = 6, to = 22, by = 4)\nfreq_s <- c(10,12,8,5,1)\nmedia <- round(sum(s*freq_s) / 36, 2)\nsum(freq_s * abs(s-media))  /36\nsum(freq_s * (s-media)^2)  /36\nsqrt( sum(freq_s * (s-media)^2)  /36 )\nstr_c(freq_s,'\\\\cdot \\\\left\\\\vert',s,'-', media, '\\\\right\\\\vert+', collapse = '')\nstr_c(freq_s,'\\\\cdot (',s,'-', media, ')^2+', collapse = '')\n\n#exemplo quantis\nx <- c(15, 5, 3, 8, 10, 2, 7, 11, 12)\nstr_c('x_{(1)} \\\\quad \\\\leq \\\\quad',sort(x),\n      'x_{(',1:length(x),')}', '\\\\quad \\\\leq \\\\quad ', collapse = '')\n\n#Ideia quartil\nset.seed(54321) #fixing seed\nn <- 1e+4+1\nx <- rnorm(n,mean = 0, sd = 0.1)\ny <- rnorm(n, mean = 0, sd = 1)\ndados <- tibble(id = c(rep('Variável 1',n), rep('Variável 2',n)),\n       y = c(x,y)) \n\n#calculando quantis segundo meu slide\nquantil <- function(x,p)\n{\n  n <- length(x)\n  if (is.integer((n+1)*p)) {\n    y <- sort(x)\n    return(y[(n+1)*p])\n  }\n  else{\n    p1 <- floor((n+1)*p)\n    p2 <- ceiling((n+1)*p)\n    y <- sort(x)\n    return( (y[p1]+y[p2])/2 )\n  }\n}\n\nq1_x <- quantil(x,0.25)\nq3_x <- quantil(x, 0.75)\n\nq1_y <- quantil(y, 0.25)\nq3_y <- quantil(y, 0.75)\n\nggplot(dados)+\n  geom_histogram(mapping = aes(x=y, fill=id, y = ..density..), \n                 alpha = 0.4, binwidth = 0.05) +\n  labs(fill='Legenda')+\n  scale_color_manual(values=c(\"red\", \"blue\"))+\n  geom_vline(xintercept = q1_x, color = 'red', \n             linetype = 'dotted', size = 1.5, alpha = 0.6)+\n  annotate(geom=\"text\", x=q1_x-0.2, y=2, label='q1',\n           color=\"red\", parse = T)+\n  geom_vline(xintercept = q3_x, color = 'red', \n             linetype='dotted', size = 1.5, alpha = 0.6)+\n  annotate(geom=\"text\", x=q3_x+0.2, y=2, label='q3',\n           color=\"red\", parse = T)+\n  geom_vline(xintercept = q1_y, color = 'blue', \n             linetype = 'dashed', size = 1.5, alpha = 0.6)+\n  annotate(geom=\"text\", x=q1_y-0.2, y=2, label='q1',\n           color=\"blue\", parse = T)+\n  geom_vline(xintercept = q3_y, color = 'blue', \n             linetype='dashed', size = 1.5, alpha = 0.6)+\n  annotate(geom=\"text\", x=q3_y+0.2, y=2, label='q3',\n           color=\"blue\", parse = T)+\n  xlab('')+\n  ylab('Densidade de Frequencia')\nggsave('motivacao_dq.png')\nggsave('motivacao_dq.pdf')\n\n#contas exercício 1\ns <- seq(from = 6, to = 22, by = 4)\nfreq_s <- c(10,12,8,5,1)\np_s <- numeric(0)\nfor(i in 1:5) p_s <- c(p_s, rep(s[i], freq_s[i]))\np_s <- sort(p_s)\n#primeiro quartil\nquantil(p_s,0.25)\nquantil(p_s,0.5)\nquantil(p_s,0.75)\n\n#Exercício 2\nx <- c(4.4, 5.2, 5.3, 5.6, 6.1, 6.4, 7.6, 7.6, 8.0, 8.1, 8.2, 8.9, 9.0, 9.1, 9.8)\nquantil(x, 0.9)\nmean(x)\n(x-mean(x)) %>% abs() %>% mean()\n(x-mean(x))^2 %>% mean()\n(x-mean(x))^2 %>% mean() %>% sqrt()\n\n#Exercicio 3\nx <- c(1125.4, 632, 267.6, 257, 245.2, 235.5, 180.2, 175.5, \n       153.8, 140.9, 139.3, 130.2, 122.2, 108, 100)\nquantil(x,0.25)\nquantil(x,0.5)\nquantil(x,0.75)\nmean(x)\n(x-mean(x)) %>% abs() %>% mean()\n(x-mean(x))^2 %>% mean()\n(x-mean(x))^2 %>% mean() %>% sqrt()\n\n#boxplot\nx <- c(15, 5, 3, 8, 10, 2, 7, 11, 12)\nq1 <- quantil(x, 0.25)\nq2 <- quantil(x, 0.5)\nq3 <- quantil(x, 0.75)\ndq <- q3-q1\nLS <- q3 + 1.5 * dq\nLI <- q3 - 1.5 * dq\ntibble(x=x) %>%\n  ggplot()+\n  geom_boxplot(aes(x='X',lower = q1, middle = q2, upper = q3, ymin=LI, ymax = LS), \n               stat = 'identity')+\n  xlab('') + ylab('') + coord_flip()\nggsave('boxplot.png')\n\n#Medidas de assimetria\n#Turma 1\nn <- 15\nset.seed(5431)\nx <- round( 10 * rbeta(n, 17, 2),2)\nq1 <- quantil(x, 0.25)\nq2 <- quantil(x,0.5)\nq3 <- quantil(x, 0.75)\nLS <- q3 + 1.5 * (q3-q1)\nLI <- q1 - 1.5 * (q3-q1) \n# boxplot\ntibble(x=x) %>%\n  ggplot()+\n  geom_boxplot(mapping = aes(x='Turma 1',lower = q1, middle = q2,\n                             upper = q3, ymax = LS, ymin = LI),\n               stat = 'identity')+\n  xlab('') + ylab('Notas dos alunos')+\n  scale_y_continuous(breaks=c(LI, q1, q2, q3, LS))+\n  theme(axis.title = element_text(size=20),\n        axis.text = element_text(size=15, angle=90))+\n  coord_flip()\nggsave('asim_boxplot_turma_1.png')\n\n# Histograma\ny <- x %>% tibble() %>%\n  group_by(cut(x,breaks = seq(from = 7.5, to = 10, by = 0.5))) %>%\n  summarise(freq=n()) %>%\n  mutate(den = round(freq /(0.5 * sum(freq)),4))\ntibble(x) %>%\n  ggplot()+\n  geom_histogram(mapping = aes(x = x, y = ..density..),\n                 breaks = seq(from = 7.5, to = 10, by = 0.5),\n                 alpha = 0.7, fill = 'gray')+\n  # geom_line(aes(x=x,y = ..density.., colour = 'Empirical'), \n  #           stat = 'density', size = 2, color = 'blue')+\n  xlab('Notas') + ylab('Densidade de frequência')+\n  geom_vline(xintercept = q1, color = 'red', size = 2)+\n  geom_vline(xintercept = q2, color = 'red',size = 2)+\n  geom_vline(xintercept = q3, color = 'red', size = 2) +\n  annotate('text',x=q1-0.1, y = 0.75,\n           label = as.character(paste(expression(q[1]))),\n           parse = T, color = 'red', size = 5)+\n  annotate('text',x=q2-0.1, y = 0.75,\n           label = as.character(paste(expression(q[2]))),\n           parse = T, color = 'red', size = 5)+\n  annotate('text',x=q3-0.1, y = 0.75,\n           label = as.character(paste(expression(q[3]))),\n           parse = T, color = 'red', size = 5)+\n  scale_x_continuous(breaks = seq(from = 7.5, to = 10, by = 0.5)) +\n  scale_y_continuous(breaks=y$den)+\n  theme(axis.title = element_text(size=20),\n        axis.text = element_text(size=15))\nggsave('asim_histogram_turma_1.png')\n\n\n#Turma 2\nn <- 19\nset.seed(12345)\n# x <- round( 10 * rbeta(n, 17, 10),2)\nx <- rtrunc(19,spec = 'lnorm',a=0,b=10, mean = 0.5, sd=1) %>% round(2)\nq1 <- quantil(x, 0.25)\nq2 <- quantil(x,0.5)\nq3 <- quantil(x, 0.75)\nLS <- q3 + 1.5 * (q3-q1)\nLI <- q1 - 1.5 * (q3-q1) \n# boxplot\ntibble(x=x) %>%\n  ggplot()+\n  geom_boxplot(mapping = aes(x='Turma 2',lower = q1, middle = q2,\n                             upper = q3, ymax = LS, ymin = LI),\n               stat = 'identity')+\n  xlab('') + ylab('Notas dos alunos')+\n  geom_point(aes(x='Turma 2', y = 8.93))+\n  scale_y_continuous(breaks=c(LI, q1, q2, q3,LS,8.93))+\n  theme(axis.title = element_text(size = 20),\n        axis.text = element_text(size = 15, angle = 90))+\n  coord_flip()\nggsave('asim_boxplot_turma_2.png')\n\n# Histograma\nh <- 1.5\ndensidade_frequencia <- x %>% tibble() %>%\n  group_by(cut(x,breaks = seq(from = 0, to = 10, by = h))) %>%\n  summarise(freq=n()) %>%\n  mutate(dens = round(freq/(h * n),4))\ntibble(x) %>%\n  ggplot()+\n  geom_histogram(mapping = aes(x = x, y = ..density..),\n                 breaks = seq(from = 0, to = 10, by = h),\n                 alpha = 0.7, fill = 'gray')+\n  # geom_line(aes(x=x,y = ..density.., colour = 'Empirical'), \n  #           stat = 'density', size = 2, color = 'blue')+\n  xlab('Notas') + ylab('Densidade de frequência')+\n  geom_vline(xintercept = q1, color = 'red', size = 2)+\n  geom_vline(xintercept = q2, color = 'red',size = 2)+\n  geom_vline(xintercept = q3, color = 'red', size = 2) +\n  annotate('text',x=q1-0.25, y = 0.75,\n           label = as.character(paste(expression(q[1]))),\n           parse = T, color = 'red', size = 5)+\n  annotate('text',x=q2-0.25, y = 0.75,\n           label = as.character(paste(expression(q[2]))),\n           parse = T, color = 'red', size = 5)+\n  annotate('text',x=q3-0.25, y = 0.75,\n           label = as.character(paste(expression(q[3]))),\n           parse = T, color = 'red', size = 5)+\n  scale_x_continuous(breaks = seq(from = 0, to = 10, by = h))+\n  scale_y_continuous(breaks=densidade_frequencia$dens)+\n  theme(axis.title = element_text(size = 20),\n        axis.text = element_text(size = 15))\nggsave('asim_histogram_turma_2.png')\n",
    "created" : 1524510475437.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2746375387",
    "id" : "BA556546",
    "lastKnownWriteTime" : 1525269128,
    "last_content_update" : 1525269128,
    "path" : "C:/Users/Gilberto/Dropbox/1sem_2018/MATD03T01/slides/aula_2/code_r/Medidas_resumo.R",
    "project_path" : "Medidas_resumo.R",
    "properties" : {
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}