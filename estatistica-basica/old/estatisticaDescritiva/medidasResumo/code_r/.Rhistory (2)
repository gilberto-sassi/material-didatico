tibble(x = "X", q1 = q1, q2 = q2, q3 = q3,
dq = dq, LI = LI, LS = LS) %>%
ggplot()+
geom_boxplot(aes(x = x,
ymin = LI,
ymax = LS,
middle = q2,
lower = q1, upper = q3),
stat = "identity", width = 0.1) +
theme_minimal() +
scale_x_discrete(breaks = NULL) +
labs(x = "", y = "") +coord_flip()
tibble(x = "X", q1 = q1, q2 = q2, q3 = q3,
dq = dq, LI = LI, LS = LS) %>%
ggplot()+
geom_boxplot(aes(x = x,
ymin = LI,
ymax = LS,
middle = q2,
lower = q1, upper = q3),
stat = "identity", width = 0.1) +
theme_minimal() +
scale_x_discrete(breaks = NULL) +
labs(x = "", y = "")
ggsave('boxplot.png')
#Medidas de assimetria
#Turma 1
n <- 19
set.seed(5431)
x <- round( 10 * rbeta(n, 17, 2),2)
q1 <- quantil(x, 0.25)
q2 <- quantil(x,0.5)
q3 <- quantil(x, 0.75)
LS <- q3 + 1.5 * (q3-q1)
LI <- q1 - 1.5 * (q3-q1)
# boxplot
tibble(x=x) %>%
ggplot()+
geom_boxplot(mapping = aes(x='Turma 1',lower = q1, middle = q2,
upper = q3, ymax = LS, ymin = LI),
stat = 'identity')+
xlab('') + ylab('Notas dos alunos')+
scale_y_continuous(breaks=c(LI, q1, q2, q3, LS))+
theme(axis.title = element_text(size=20),
axis.text = element_text(size=15, angle=90))+
coord_flip()
# boxplot
tibble(x = "Turma 1", q1 = q1, q2 = q2, q3 = a3,
lower = LI, upper = LS)
# boxplot
tibble(x = "Turma 1", q1 = q1, q2 = q2, q3 = q3,
lower = LI, upper = LS)
# boxplot
tibble(x = "Turma 1", q1 = q1, q2 = q2, q3 = q3,
lower = LI, upper = LS) %>%
ggplot() +
geom_boxplot(mapping = aes(x=x,lower = q1, middle = q2,
upper = q3, ymax = LS, ymin = LI),
stat = 'identity')
# boxplot
tibble(x = "Turma 1", q1 = q1, q2 = q2, q3 = q3,
lower = LI, upper = LS) %>%
ggplot() +
geom_boxplot(mapping = aes(x=x,lower = q1, middle = q2,
upper = q3, ymax = LS, ymin = LI),
stat = 'identity', width = 0.1)
tibble(x = "X", q1 = q1, q2 = q2, q3 = q3,
dq = dq, LI = LI, LS = LS) %>%
ggplot()+
geom_boxplot(aes(x = x,
ymin = LI,
ymax = LS,
middle = q2,
lower = q1, upper = q3),
stat = "identity", width = 0.1) +
theme_minimal() +
scale_x_discrete(breaks = NULL) +
scale_y_continuous(breaks = c(LI, q1, q2, q3, LS)) +
labs(x = "", y = "")
ggsave('boxplot.png')
# boxplot
tibble(x = "Turma 1", q1 = q1, q2 = q2, q3 = q3,
lower = LI, upper = LS) %>%
ggplot() +
geom_boxplot(mapping = aes(x=x,lower = q1, middle = q2,
upper = q3, ymax = LS, ymin = LI),
stat = 'identity', width = 0.1)
# boxplot
tibble(x = "Turma 1", q1 = q1, q2 = q2, q3 = q3,
lower = LI, upper = LS) %>%
ggplot() +
geom_boxplot(mapping = aes(x=x,lower = q1, middle = q2,
upper = q3, ymax = LS, ymin = LI),
stat = 'identity', width = 0.1) +
xlab('') + ylab('Notas dos alunos')+
scale_y_continuous(breaks=c(LI, q1, q2, q3, LS))
# boxplot
tibble(x = "Turma 1", q1 = q1, q2 = q2, q3 = q3,
lower = LI, upper = LS) %>%
ggplot() +
geom_boxplot(mapping = aes(x=x,lower = q1, middle = q2,
upper = q3, ymax = LS, ymin = LI),
stat = 'identity', width = 0.1) +
xlab('') + ylab('Notas dos alunos')+
scale_y_continuous(breaks=c(LI, q1, q2, q3, LS)) +
theme(axis.title = element_text(size=20),
axis.text = element_text(size=15, angle=90))+
coord_flip()
# boxplot
tibble(x = "Turma 1", q1 = q1, q2 = q2, q3 = q3,
lower = LI, upper = LS) %>%
ggplot() +
geom_boxplot(mapping = aes(x=x,lower = q1, middle = q2,
upper = q3, ymax = LS, ymin = LI),
stat = 'identity', width = 0.1) +
xlab('') + ylab('Notas dos alunos')+
scale_y_continuous(breaks=c(LI, q1, q2, q3, LS)) +
theme(axis.title = element_text(size=20),
axis.text = element_text(size=15, angle=90))
# boxplot
tibble(x = "Turma 1", q1 = q1, q2 = q2, q3 = q3,
lower = LI, upper = LS) %>%
ggplot() +
geom_boxplot(mapping = aes(x=x,lower = q1, middle = q2,
upper = q3, ymax = LS, ymin = LI),
stat = 'identity', width = 0.1) +
xlab('') + ylab('Notas dos alunos')+
scale_y_continuous(breaks=c(LI, q1, q2, q3, LS)) +
theme(axis.title = element_text(size=20),
axis.text = element_text(size=15))
# boxplot
tibble(x = "Turma 1", q1 = q1, q2 = q2, q3 = q3,
lower = LI, upper = LS) %>%
ggplot() +
geom_boxplot(mapping = aes(x=x,lower = q1, middle = q2,
upper = q3, ymax = LS, ymin = LI),
stat = 'identity', width = 0.1) +
xlab('') + ylab('Notas dos alunos')+
scale_y_continuous(breaks=c(LI, q1, q2, q3, LS)) +
theme(axis.title = element_text(size=20),
axis.text = element_text(size=15))
ggsave('asim_boxplot_turma_1.png')
# boxplot
tibble(x = "Turma 1", q1 = q1, q2 = q2, q3 = q3,
lower = LI, upper = LS) %>%
ggplot() +
geom_boxplot(mapping = aes(x=x,lower = q1, middle = q2,
upper = q3, ymax = LS, ymin = LI),
stat = 'identity', width = 0.1) +
xlab('') + ylab('Notas dos alunos')+
theme_minimal()+
scale_y_continuous(breaks=c(LI, q1, q2, q3, LS)) +
theme(axis.title = element_text(size=20),
axis.text = element_text(size=15))
ggsave('asim_boxplot_turma_1.png')
tibble(x) %>%
ggplot()+
geom_histogram(mapping = aes(x = x, y = ..density..),
breaks = seq(from = 7.5, to = 10, by = 0.5),
alpha = 0.7, fill = 'gray')+
# geom_line(aes(x=x,y = ..density.., colour = 'Empirical'),
#           stat = 'density', size = 2, color = 'blue')+
xlab('Notas') + ylab('Densidade de frequência')+
geom_vline(xintercept = q1, color = 'red', size = 2)+
geom_vline(xintercept = q2, color = 'red',size = 2)+
geom_vline(xintercept = q3, color = 'red', size = 2) +
annotate('text',x=q1-0.1, y = 0.75,
label = as.character(paste(expression(q[1]))),
parse = T, color = 'red', size = 5)+
annotate('text',x=q2-0.1, y = 0.75,
label = as.character(paste(expression(q[2]))),
parse = T, color = 'red', size = 5)+
annotate('text',x=q3-0.1, y = 0.75,
label = as.character(paste(expression(q[3]))),
parse = T, color = 'red', size = 5)+
scale_x_continuous(breaks = seq(from = 7.5, to = 10, by = 0.5)) +
scale_y_continuous(breaks=y$den)+
theme(axis.title = element_text(size=20),
axis.text = element_text(size=15))
# Histograma
y <- x %>% tibble() %>%
group_by(cut(x,breaks = seq(from = 7.5, to = 10, by = 0.5))) %>%
summarise(freq=n()) %>%
mutate(den = round(freq /(0.5 * sum(freq)),4))
x
# Histograma
y <- x %>% tibble() %>%
group_by(cut(x,breaks = seq(from = 7.5, to = 10, by = 0.5))) %>%
summarise(freq=n()) %>%
mutate(den = round(freq /(0.5 * sum(freq)),4))
x %>% tibble()
x %>% tibble() %>%
group_by(cut(x,breaks = seq(from = 7.5, to = 10, by = 0.5)))
x
cut(x,breaks = seq(from = 7.5, to = 10, by = 0.5))
x %>% tibble() %>%
group_by(cut(x,breaks = seq(from = 7.5, to = 10, by = 0.5)))
x %>% tibble() %>%
group_by(cut(x,breaks = seq(from = 7.5, to = 10, by = 0.5))) %>%
summarise(freq=n())
cut(x,breaks = seq(from = 7.5, to = 10, by = 0.5))
x
summary(x)
# Histograma
y <- x %>%
tibble() %>%
group_by(cut(x,breaks = seq(from = 7, to = 10, by = 0.5))) %>%
summarise(freq=n()) %>%
mutate(den = round(freq /(0.5 * sum(freq)),4))
y
tibble(x) %>%
ggplot()+
geom_histogram(mapping = aes(x = x, y = ..density..),
breaks = seq(from = 7, to = 10, by = 0.5),
alpha = 0.7, fill = 'gray')
tibble(x) %>%
ggplot()+
geom_histogram(mapping = aes(x = x, y = ..density..),
breaks = seq(from = 7, to = 10, by = 0.5),
alpha = 0.7, fill = 'gray')+
# geom_line(aes(x=x,y = ..density.., colour = 'Empirical'),
#           stat = 'density', size = 2, color = 'blue')+
xlab('Notas') + ylab('Densidade de frequência')+
geom_vline(xintercept = q1, color = 'red', size = 2)+
geom_vline(xintercept = q2, color = 'red',size = 2)+
geom_vline(xintercept = q3, color = 'red', size = 2) +
annotate('text',x=q1-0.1, y = 0.75,
label = as.character(paste(expression(q[1]))),
parse = T, color = 'red', size = 5)+
annotate('text',x=q2-0.1, y = 0.75,
label = as.character(paste(expression(q[2]))),
parse = T, color = 'red', size = 5)+
annotate('text',x=q3-0.1, y = 0.75,
label = as.character(paste(expression(q[3]))),
parse = T, color = 'red', size = 5)+
scale_x_continuous(breaks = seq(from = 7.5, to = 10, by = 0.5)) +
scale_y_continuous(breaks=y$den)+
theme(axis.title = element_text(size=20),
axis.text = element_text(size=15))
tibble(x) %>%
ggplot()+
geom_histogram(mapping = aes(x = x, y = ..density..),
breaks = seq(from = 7, to = 10, by = 0.5),
alpha = 0.7, fill = 'blue')+
# geom_line(aes(x=x,y = ..density.., colour = 'Empirical'),
#           stat = 'density', size = 2, color = 'blue')+
xlab('Notas') + ylab('Densidade de frequência')+
geom_vline(xintercept = q1, color = 'red', size = 2)+
geom_vline(xintercept = q2, color = 'red',size = 2)+
geom_vline(xintercept = q3, color = 'red', size = 2) +
annotate('text',x=q1-0.1, y = 0.75,
label = as.character(paste(expression(q[1]))),
parse = T, color = 'red', size = 5)+
annotate('text',x=q2-0.1, y = 0.75,
label = as.character(paste(expression(q[2]))),
parse = T, color = 'red', size = 5)+
annotate('text',x=q3-0.1, y = 0.75,
label = as.character(paste(expression(q[3]))),
parse = T, color = 'red', size = 5)+
scale_x_continuous(breaks = seq(from = 7.5, to = 10, by = 0.5)) +
scale_y_continuous(breaks=y$den)+
theme(axis.title = element_text(size=20),
axis.text = element_text(size=15))
tibble(x) %>%
ggplot()+
geom_histogram(mapping = aes(x = x, y = ..density..),
breaks = seq(from = 7, to = 10, by = 0.5),
alpha = 0.7, fill = 'blue')+
# geom_line(aes(x=x,y = ..density.., colour = 'Empirical'),
#           stat = 'density', size = 2, color = 'blue')+
xlab('Notas') + ylab('Densidade de frequência')+
geom_vline(xintercept = q1, color = 'red', size = 2)+
geom_vline(xintercept = q2, color = 'red',size = 2)+
geom_vline(xintercept = q3, color = 'red', size = 2) +
annotate('text',x=q1-0.1, y = 0.75,
label = as.character(paste(expression(q[1]))),
parse = T, color = 'red', size = 5)+
annotate('text',x=q2-0.1, y = 0.75,
label = as.character(paste(expression(q[2]))),
parse = T, color = 'red', size = 5)+
annotate('text',x=q3-0.1, y = 0.75,
label = as.character(paste(expression(q[3]))),
parse = T, color = 'red', size = 5)+
theme_minimal()+
scale_x_continuous(breaks = seq(from = 7.5, to = 10, by = 0.5)) +
scale_y_continuous(breaks=y$den)+
theme(axis.title = element_text(size=20),
axis.text = element_text(size=15))
ggsave('asim_histogram_turma_1.png')
# Histograma
y <- x %>%
tibble() %>%
group_by(cut(x,breaks = seq(from = 7, to = 10, by = 0.5))) %>%
summarise(freq=n()) %>%
mutate(den = round(freq /(0.5 * sum(freq)),4))
tibble(x) %>%
ggplot()+
geom_histogram(mapping = aes(x = x, y = ..density..),
breaks = seq(from = 7, to = 10, by = 0.5),
alpha = 0.7, fill = 'blue')+
# geom_line(aes(x=x,y = ..density.., colour = 'Empirical'),
#           stat = 'density', size = 2, color = 'blue')+
xlab('Notas') + ylab('Densidade de frequência')+
geom_vline(xintercept = q1, color = 'red', size = 2)+
geom_vline(xintercept = q2, color = 'red',size = 2)+
geom_vline(xintercept = q3, color = 'red', size = 2) +
annotate('text',x=q1-0.1, y = 0.75,
label = as.character(paste(expression(q[1]))),
parse = T, color = 'red', size = 5)+
annotate('text',x=q2-0.1, y = 0.75,
label = as.character(paste(expression(q[2]))),
parse = T, color = 'red', size = 5)+
annotate('text',x=q3-0.1, y = 0.75,
label = as.character(paste(expression(q[3]))),
parse = T, color = 'red', size = 5)+
theme_minimal()+
scale_x_continuous(breaks = seq(from = 7.5, to = 10, by = 0.5)) +
scale_y_continuous(breaks=y$den)+
theme(axis.title = element_text(size=20),
axis.text = element_text(size=15))
ggsave('asim_histogram_turma_1.png')
#Turma 2
n <- 19
set.seed(12345)
# x <- round( 10 * rbeta(n, 17, 10),2)
x <- rtrunc(19,spec = 'lnorm',a=0,b=10, mean = 0.5, sd=1) %>% round(2)
q1 <- quantil(x, 0.25)
q2 <- quantil(x,0.5)
q3 <- quantil(x, 0.75)
LS <- q3 + 1.5 * (q3-q1)
LI <- q1 - 1.5 * (q3-q1)
# boxplot
tibble(x=x) %>%
ggplot()+
geom_boxplot(mapping = aes(x='Turma 2',lower = q1, middle = q2,
upper = q3, ymax = LS, ymin = LI),
stat = 'identity')+
xlab('') + ylab('Notas dos alunos')+
geom_point(aes(x='Turma 2', y = 8.93))+
scale_y_continuous(breaks=c(LI, q1, q2, q3,LS,8.93))+
theme(axis.title = element_text(size = 20),
axis.text = element_text(size = 15, angle = 90))+
coord_flip()
tibble(x = "Turma 2", LI = LI, LS = LS, q1 = q1,
q2 = q2, q3 = q3)
tibble(x = "Turma 2", LI = LI, LS = LS, q1 = q1,
q2 = q2, q3 = q3) %>%
ggplot() +
geom_boxplot(mapping = aes(x='Turma 2',lower = q1, middle = q2,
upper = q3, ymax = LS, ymin = LI),
stat = 'identity')
tibble(x = "Turma 2", LI = LI, LS = LS, q1 = q1,
q2 = q2, q3 = q3) %>%
ggplot() +
geom_boxplot(mapping = aes(x='Turma 2',lower = q1, middle = q2,
upper = q3, ymax = LS, ymin = LI),
stat = 'identity', width = 0.1)
tibble(x = "Turma 2", LI = LI, LS = LS, q1 = q1,
q2 = q2, q3 = q3) %>%
ggplot() +
geom_boxplot(mapping = aes(x='Turma 2',lower = q1, middle = q2,
upper = q3, ymax = LS, ymin = LI),
stat = 'identity', width = 0.1) +
xlab('') + ylab('Notas dos alunos')
tibble(x = "Turma 2", LI = LI, LS = LS, q1 = q1,
q2 = q2, q3 = q3) %>%
ggplot() +
geom_boxplot(mapping = aes(x='Turma 2',lower = q1, middle = q2,
upper = q3, ymax = LS, ymin = LI),
stat = 'identity', width = 0.1) +
xlab('') + ylab('Notas dos alunos') +
geom_point(aes(x='Turma 2', y = 8.93))
tibble(x = "Turma 2", LI = LI, LS = LS, q1 = q1,
q2 = q2, q3 = q3) %>%
ggplot() +
geom_boxplot(mapping = aes(x='Turma 2',lower = q1, middle = q2,
upper = q3, ymax = LS, ymin = LI),
stat = 'identity', width = 0.1) +
xlab('') + ylab('Notas dos alunos') +
geom_point(aes(x='Turma 2', y = 8.93)) +
theme_minimal() +
scale_y_continuous(breaks=c(LI, q1, q2, q3,LS,8.93))+
theme(axis.title = element_text(size = 20),
axis.text = element_text(size = 15, angle = 90))
tibble(x = "Turma 2", LI = LI, LS = LS, q1 = q1,
q2 = q2, q3 = q3) %>%
ggplot() +
geom_boxplot(mapping = aes(x='Turma 2',lower = q1, middle = q2,
upper = q3, ymax = LS, ymin = LI),
stat = 'identity', width = 0.1) +
xlab('') + ylab('Notas dos alunos') +
geom_point(aes(x='Turma 2', y = 8.93)) +
theme_minimal() +
scale_y_continuous(breaks=c(LI, q1, q2, q3,LS,8.93))+
theme(axis.title = element_text(size = 20),
axis.text = element_text(size = 15))
tibble(x = "Turma 2", LI = LI, LS = LS, q1 = q1,
q2 = q2, q3 = q3) %>%
ggplot() +
geom_boxplot(mapping = aes(x='Turma 2',lower = q1, middle = q2,
upper = q3, ymax = LS, ymin = LI),
stat = 'identity', width = 0.1) +
xlab('') + ylab('Notas dos alunos') +
geom_point(aes(x='Turma 2', y = 8.93)) +
theme_minimal() +
scale_y_continuous(breaks=c(LI, q1, q2, q3,LS,8.93))+
theme(axis.title = element_text(size = 20),
axis.text = element_text(size = 15))
ggsave('asim_boxplot_turma_2.png')
#Turma 2
n <- 19
set.seed(12345)
# x <- round( 10 * rbeta(n, 17, 10),2)
x <- rtrunc(19,spec = 'lnorm',a=0,b=10, mean = 0.5, sd=1) %>% round(2)
q1 <- quantil(x, 0.25)
q2 <- quantil(x,0.5)
q3 <- quantil(x, 0.75)
LS <- q3 + 1.5 * (q3-q1)
LI <- q1 - 1.5 * (q3-q1)
tibble(x = "Turma 2", LI = LI, LS = LS, q1 = q1,
q2 = q2, q3 = q3) %>%
ggplot() +
geom_boxplot(mapping = aes(x='Turma 2',lower = q1, middle = q2,
upper = q3, ymax = LS, ymin = LI),
stat = 'identity', width = 0.1) +
xlab('') + ylab('Notas dos alunos') +
geom_point(aes(x='Turma 2', y = 8.93)) +
theme_minimal() +
scale_y_continuous(breaks=c(LI, q1, q2, q3,LS,8.93))+
theme(axis.title = element_text(size = 20),
axis.text = element_text(size = 15))
ggsave('asim_boxplot_turma_2.png')
# Histograma
h <- 1.5
densidade_frequencia <- x %>% tibble() %>%
group_by(cut(x,breaks = seq(from = 0, to = 10, by = h))) %>%
summarise(freq=n()) %>%
mutate(dens = round(freq/(h * n),4))
tibble(x) %>%
ggplot()+
geom_histogram(mapping = aes(x = x, y = ..density..),
breaks = seq(from = 0, to = 10, by = h),
alpha = 0.7, fill = 'gray')+
# geom_line(aes(x=x,y = ..density.., colour = 'Empirical'),
#           stat = 'density', size = 2, color = 'blue')+
xlab('Notas') + ylab('Densidade de frequência')+
geom_vline(xintercept = q1, color = 'red', size = 2)+
geom_vline(xintercept = q2, color = 'red',size = 2)+
geom_vline(xintercept = q3, color = 'red', size = 2) +
annotate('text',x=q1-0.25, y = 0.75,
label = as.character(paste(expression(q[1]))),
parse = T, color = 'red', size = 5)+
annotate('text',x=q2-0.25, y = 0.75,
label = as.character(paste(expression(q[2]))),
parse = T, color = 'red', size = 5)+
annotate('text',x=q3-0.25, y = 0.75,
label = as.character(paste(expression(q[3]))),
parse = T, color = 'red', size = 5)+
scale_x_continuous(breaks = seq(from = 0, to = 10, by = h))+
scale_y_continuous(breaks=densidade_frequencia$dens)+
theme(axis.title = element_text(size = 20),
axis.text = element_text(size = 15))
tibble(x) %>%
ggplot()+
geom_histogram(mapping = aes(x = x, y = ..density..),
breaks = seq(from = 0, to = 10, by = h),
alpha = 0.7, fill = 'blue')+
# geom_line(aes(x=x,y = ..density.., colour = 'Empirical'),
#           stat = 'density', size = 2, color = 'blue')+
xlab('Notas') + ylab('Densidade de frequência')+
geom_vline(xintercept = q1, color = 'red', size = 2)+
geom_vline(xintercept = q2, color = 'red',size = 2)+
geom_vline(xintercept = q3, color = 'red', size = 2) +
annotate('text',x=q1-0.25, y = 0.75,
label = as.character(paste(expression(q[1]))),
parse = T, color = 'red', size = 5)+
annotate('text',x=q2-0.25, y = 0.75,
label = as.character(paste(expression(q[2]))),
parse = T, color = 'red', size = 5)+
annotate('text',x=q3-0.25, y = 0.75,
label = as.character(paste(expression(q[3]))),
parse = T, color = 'red', size = 5)+
scale_x_continuous(breaks = seq(from = 0, to = 10, by = h))+
scale_y_continuous(breaks=densidade_frequencia$dens)+
theme(axis.title = element_text(size = 20),
axis.text = element_text(size = 15))
tibble(x) %>%
ggplot()+
geom_histogram(mapping = aes(x = x, y = ..density..),
breaks = seq(from = 0, to = 10, by = h),
alpha = 0.7, fill = 'blue')+
# geom_line(aes(x=x,y = ..density.., colour = 'Empirical'),
#           stat = 'density', size = 2, color = 'blue')+
xlab('Notas') + ylab('Densidade de frequência')+
geom_vline(xintercept = q1, color = 'red', size = 2)+
geom_vline(xintercept = q2, color = 'red',size = 2)+
geom_vline(xintercept = q3, color = 'red', size = 2) +
annotate('text',x=q1-0.25, y = 0.75,
label = as.character(paste(expression(q[1]))),
parse = T, color = 'red', size = 5)+
annotate('text',x=q2-0.25, y = 0.75,
label = as.character(paste(expression(q[2]))),
parse = T, color = 'red', size = 5)+
annotate('text',x=q3-0.25, y = 0.75,
label = as.character(paste(expression(q[3]))),
parse = T, color = 'red', size = 5)+
theme_minimal() +
scale_x_continuous(breaks = seq(from = 0, to = 10, by = h))+
scale_y_continuous(breaks=densidade_frequencia$dens)+
theme(axis.title = element_text(size = 20),
axis.text = element_text(size = 15))
ggsave('asim_histogram_turma_2.png')
